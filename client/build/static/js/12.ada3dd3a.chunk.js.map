{"version":3,"file":"static/js/12.ada3dd3a.chunk.js","mappings":"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","sources":["components/LootForm.js","components/AdminChatBox.js","pages/AdminDashboard.js","components/Button.js","components/Input.js","components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Input from './Input';\r\nimport Button from './Button';\r\nimport toast from 'react-hot-toast';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport default function LootForm({ loot = null, onSuccess, onCancel }) {\r\n  const { token } = useAuth();\r\n  const [form, setForm] = useState({\r\n    title: loot?.title || '',\r\n    description: loot?.description || '',\r\n    max_amount: loot?.max_amount || '',\r\n    redirect_url: loot?.redirect_url || '',\r\n    is_active: loot?.is_active !== false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n    setErrors(prev => ({ ...prev, [name]: '' }));\r\n  };\r\n\r\n  const validate = () => {\r\n    const errs = {};\r\n    if (!form.title.trim()) errs.title = 'Title is required';\r\n    if (!form.description.trim()) errs.description = 'Description is required';\r\n    if (!form.max_amount || isNaN(form.max_amount) || Number(form.max_amount) <= 0) {\r\n      errs.max_amount = 'Valid amount is required';\r\n    }\r\n    if (!form.redirect_url.trim()) errs.redirect_url = 'Redirect URL is required';\r\n    return errs;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const errs = validate();\r\n    if (Object.keys(errs).length) {\r\n      setErrors(errs);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const url = loot ? `/api/admin/loots/${loot.id}` : '/api/admin/loots';\r\n      const method = loot ? 'PUT' : 'POST';\r\n      \r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json' \r\n        },\r\n        body: JSON.stringify(form),\r\n      });\r\n      \r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      \r\n      toast.success(loot ? 'Loot updated successfully!' : 'Loot created successfully!');\r\n      onSuccess();\r\n    } catch (err) {\r\n      toast.error(err.message || 'Operation failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <Input\r\n        label=\"Title\"\r\n        name=\"title\"\r\n        value={form.title}\r\n        onChange={handleChange}\r\n        error={errors.title}\r\n        placeholder=\"Enter loot title\"\r\n      />\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium mb-1\">Description</label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          className={`input min-h-[100px] ${errors.description ? 'border-danger-500' : ''}`}\r\n          placeholder=\"Enter loot description\"\r\n        />\r\n        {errors.description && <p className=\"text-danger-600 text-xs mt-1\">{errors.description}</p>}\r\n      </div>\r\n      \r\n      <Input\r\n        label=\"Maximum Amount (₹)\"\r\n        name=\"max_amount\"\r\n        type=\"number\"\r\n        min=\"1\"\r\n        value={form.max_amount}\r\n        onChange={handleChange}\r\n        error={errors.max_amount}\r\n        placeholder=\"Enter maximum amount\"\r\n      />\r\n      \r\n      <Input\r\n        label=\"Redirect URL\"\r\n        name=\"redirect_url\"\r\n        type=\"url\"\r\n        value={form.redirect_url}\r\n        onChange={handleChange}\r\n        error={errors.redirect_url}\r\n        placeholder=\"https://example.com\"\r\n      />\r\n      \r\n      <div className=\"flex items-center\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"is_active\"\r\n          checked={form.is_active}\r\n          onChange={handleChange}\r\n          className=\"mr-2\"\r\n        />\r\n        <label className=\"text-sm\">Active</label>\r\n      </div>\r\n      \r\n      <div className=\"flex gap-2\">\r\n        <Button type=\"submit\" loading={loading} className=\"flex-1\">\r\n          {loot ? 'Update Loot' : 'Create Loot'}\r\n        </Button>\r\n        <Button type=\"button\" variant=\"secondary\" onClick={onCancel} className=\"flex-1\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n} ","import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Button from './Button';\r\nimport moment from 'moment-timezone';\r\n\r\nconst socket = io('http://localhost:5000', { autoConnect: false });\r\n\r\nexport default function AdminChatBox() {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchParticipants();\r\n    socket.connect();\r\n    socket.emit('join-admin');\r\n\r\n    socket.on('new-message', msg => {\r\n      // Only add if for selected client\r\n      if (\r\n        (msg.sender_role === 'client' && msg.sender_id === selectedClient?.id) ||\r\n        (msg.sender_role === 'admin' && msg.toUserId === selectedClient?.id)\r\n      ) {\r\n        setMessages(m => [...m, msg]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('new-message');\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClient) fetchMessages(selectedClient.id);\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const fetchParticipants = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch('/api/chat/participants', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setParticipants(data.data);\r\n  };\r\n\r\n  const fetchMessages = async clientId => {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(`/api/chat/conversation/${clientId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setMessages(data.data);\r\n  };\r\n\r\n  const sendMessage = async e => {\r\n    e.preventDefault();\r\n    if (!input.trim() || !selectedClient) return;\r\n\r\n    // Save to DB\r\n    const token = localStorage.getItem('token');\r\n    await fetch('/api/chat/messages', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message: input, receiver_id: selectedClient.id })\r\n    });\r\n\r\n    // Emit for real-time\r\n    socket.emit('send-message', {\r\n      message: input,\r\n      sender_id: 'admin',\r\n      toUserId: selectedClient.id,\r\n      sender_name: 'Admin',\r\n      sender_role: 'admin',\r\n      created_at: new Date().toISOString()\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-4\">\r\n      <div className=\"w-64 bg-white rounded shadow p-2 h-96 overflow-y-auto\">\r\n        <h3 className=\"font-semibold mb-2\">Clients</h3>\r\n        {participants.map(p => (\r\n          <div\r\n            key={p.id}\r\n            className={`p-2 rounded cursor-pointer ${selectedClient?.id === p.id ? 'bg-primary-100 text-primary-900' : 'hover:bg-gray-100'}`}\r\n            onClick={() => setSelectedClient(p)}\r\n          >\r\n            <div className=\"font-medium\">{p.username}</div>\r\n            <div className=\"text-xs text-gray-500\">{p.email}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex-1 bg-white rounded shadow p-2 flex flex-col h-96\">\r\n        <h3 className=\"font-semibold mb-2\">Chat</h3>\r\n        {selectedClient ? (\r\n          <>\r\n            <div className=\"flex-1 overflow-y-auto bg-gray-50 rounded border border-gray-200 p-2\">\r\n              <div className=\"flex flex-col gap-2\">\r\n                {messages.map((msg, i) => (\r\n                  <div key={i} className=\"mb-2\">\r\n                    <div className=\"flex justify-between items-start mb-1\">\r\n                      <b>{msg.sender_name}:</b>\r\n                      <small className=\"text-gray-500 text-xs\">\r\n                        {msg.formattedTime || (msg.created_at ? moment(msg.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A') : '')}\r\n                      </small>\r\n                    </div>\r\n                    <div>{msg.message}</div>\r\n                  </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            </div>\r\n            <form onSubmit={sendMessage} className=\"flex gap-2 mt-2\">\r\n              <input\r\n                className=\"input flex-1\"\r\n                placeholder=\"Type your message...\"\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n              />\r\n              <Button type=\"submit\" variant=\"primary\">Send</Button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400\">Select a client to chat</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Button from '../components/Button';\r\nimport LootForm from '../components/LootForm';\r\nimport toast from 'react-hot-toast';\r\nimport AdminChatBox from '../components/AdminChatBox';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport moment from 'moment-timezone';\r\n\r\nconst TABS = [\r\n  { key: 'loots', label: 'Loots' },\r\n  { key: 'clients', label: 'Clients' },\r\n  { key: 'analytics', label: 'Analytics' },\r\n  { key: 'withdrawals', label: 'Withdrawals' },\r\n  { key: 'chat', label: 'Chat' },\r\n];\r\n\r\nexport default function AdminDashboard() {\r\n  const { token } = useAuth();\r\n  const [tab, setTab] = useState('loots');\r\n  const [loots, setLoots] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [showClientModal, setShowClientModal] = useState(false);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [clientDetails, setClientDetails] = useState(null);\r\n  const [analytics, setAnalytics] = useState(null);\r\n  const [withdrawals, setWithdrawals] = useState([]);\r\n  const [showLootModal, setShowLootModal] = useState(false);\r\n  const [editingLoot, setEditingLoot] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (tab === 'loots') fetchLoots();\r\n    if (tab === 'clients') fetchClients();\r\n    if (tab === 'analytics') fetchAnalytics();\r\n    if (tab === 'withdrawals') fetchWithdrawals();\r\n  }, [tab, token]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fetchLoots = async () => {\r\n    try {\r\n      const res = await fetch('/api/admin/loots', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) setLoots(data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching loots:', error);\r\n    }\r\n  };\r\n\r\n  const fetchClients = async () => {\r\n    const res = await fetch('/api/admin/clients', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setClients(data.data);\r\n  };\r\n\r\n  const fetchAnalytics = async () => {\r\n    const res = await fetch('/api/admin/analytics', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setAnalytics(data.data);\r\n  };\r\n\r\n  const fetchWithdrawals = async () => {\r\n    const res = await fetch('/api/admin/withdrawals', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setWithdrawals(data.data);\r\n  };\r\n\r\n  const handleViewClient = async client => {\r\n    setSelectedClient(client);\r\n    setShowClientModal(true);\r\n    const res = await fetch(`/api/admin/clients/${client.id}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setClientDetails(data.data);\r\n  };\r\n\r\n  const handleWithdrawalAction = async (id, status) => {\r\n    let notes = '';\r\n    let reference_number = '';\r\n    \r\n    if (status === 'rejected') {\r\n      notes = prompt('Enter rejection reason:');\r\n      if (notes === null) return; // User cancelled\r\n    } else if (status === 'approved') {\r\n      reference_number = prompt('Enter reference number (numbers only):');\r\n      if (reference_number === null) return; // User cancelled\r\n      if (!reference_number || !/^\\d+$/.test(reference_number)) {\r\n        toast.error('Reference number is required and must contain only numbers');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    try {\r\n      const res = await fetch(`/api/admin/withdrawals/${id}`, {\r\n        method: 'PUT',\r\n        headers: { \r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json' \r\n        },\r\n        body: JSON.stringify({ status, notes, reference_number }),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success(`Withdrawal ${status}`);\r\n      fetchWithdrawals();\r\n    } catch (err) {\r\n      toast.error(err.message || 'Action failed');\r\n    }\r\n  };\r\n\r\n  const handleCreateLoot = () => {\r\n    setEditingLoot(null);\r\n    setShowLootModal(true);\r\n  };\r\n\r\n  const handleEditLoot = (loot) => {\r\n    setEditingLoot(loot);\r\n    setShowLootModal(true);\r\n  };\r\n\r\n  const handleLootSuccess = () => {\r\n    setShowLootModal(false);\r\n    setEditingLoot(null);\r\n    fetchLoots();\r\n  };\r\n\r\n  const handleDeleteLoot = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this loot?')) return;\r\n    try {\r\n      const res = await fetch(`/api/admin/loots/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Loot deleted successfully!');\r\n      fetchLoots();\r\n    } catch (err) {\r\n      toast.error(err.message || 'Delete failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Navbar />\r\n      <div className=\"max-w-5xl mx-auto py-8 px-2\">\r\n        <div className=\"flex gap-2 mb-6 border-b\">\r\n          {TABS.map(t => (\r\n            <button\r\n              key={t.key}\r\n              className={`px-4 py-2 font-medium border-b-2 transition-colors duration-150 ${tab === t.key ? 'border-primary-600 text-primary-700' : 'border-transparent text-gray-500 hover:text-primary-600'}`}\r\n              onClick={() => setTab(t.key)}\r\n            >\r\n              {t.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          {tab === 'loots' && (\r\n            <div>\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-xl font-bold\">Loots</h2>\r\n                <Button variant=\"primary\" onClick={handleCreateLoot}>Create New Loot</Button>\r\n              </div>\r\n              {loots.length === 0 ? (\r\n                <div className=\"text-gray-500\">No loots available.</div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full bg-white rounded shadow\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-4 py-2\">Title</th>\r\n                        <th className=\"px-4 py-2\">Description</th>\r\n                        <th className=\"px-4 py-2\">Max Amount</th>\r\n                        <th className=\"px-4 py-2\">Status</th>\r\n                        <th className=\"px-4 py-2\">Created</th>\r\n                        <th className=\"px-4 py-2\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {loots.map(loot => (\r\n                        <tr key={loot.id} className=\"border-t\">\r\n                          <td className=\"px-4 py-2\">{loot.title}</td>\r\n                          <td className=\"px-4 py-2\">{loot.description}</td>\r\n                          <td className=\"px-4 py-2\">₹{loot.max_amount}</td>\r\n                          <td className=\"px-4 py-2\">\r\n                            <span className={`badge ${loot.is_active ? 'badge-success' : 'badge-warning'}`}>\r\n                              {loot.is_active ? 'Active' : 'Inactive'}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-4 py-2\">{moment(loot.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')}</td>\r\n                          <td className=\"px-4 py-2 flex gap-2\">\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={() => handleEditLoot(loot)}>Edit</Button>\r\n                            <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteLoot(loot.id)}>Delete</Button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {tab === 'clients' && (\r\n            <div>\r\n              <h2 className=\"text-xl font-bold mb-4\">Clients</h2>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full bg-white rounded shadow\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-4 py-2\">Username</th>\r\n                      <th className=\"px-4 py-2\">Email</th>\r\n                      <th className=\"px-4 py-2\">Balance</th>\r\n                      <th className=\"px-4 py-2\">Total Earned</th>\r\n                      <th className=\"px-4 py-2\">Offers</th>\r\n                      <th className=\"px-4 py-2\">Referrals</th>\r\n                      <th className=\"px-4 py-2\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {clients.map(client => (\r\n                      <tr key={client.id} className=\"border-t\">\r\n                        <td className=\"px-4 py-2\">{client.username}</td>\r\n                        <td className=\"px-4 py-2\">{client.email}</td>\r\n                        <td className=\"px-4 py-2\">₹{client.balance}</td>\r\n                        <td className=\"px-4 py-2\">₹{client.total_earned}</td>\r\n                        <td className=\"px-4 py-2\">{client.total_investments}</td>\r\n                        <td className=\"px-4 py-2\">{client.total_referrals}</td>\r\n                        <td className=\"px-4 py-2\">\r\n                          <Button variant=\"primary\" onClick={() => handleViewClient(client)} size=\"sm\">View</Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              {showClientModal && clientDetails && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n                  <div className=\"bg-white p-6 rounded shadow w-full max-w-2xl overflow-y-auto max-h-[90vh]\">\r\n                    <h2 className=\"text-lg font-bold mb-2\">Client: {selectedClient.username}</h2>\r\n                    <div className=\"mb-2 text-sm text-gray-600\">Email: {selectedClient.email}</div>\r\n                    <div className=\"mb-2 text-sm text-gray-600\">Balance: ₹{clientDetails.client.balance}</div>\r\n                    <div className=\"mb-2 text-sm text-gray-600\">Total Earned: ₹{clientDetails.client.total_earned}</div>\r\n                    <button\r\n                      className=\"bg-primary-600 text-white px-3 py-1 rounded mb-4\"\r\n                      onClick={async () => {\r\n                        const amount = prompt('Enter amount to credit to this client:');\r\n                        if (!amount || isNaN(amount) || Number(amount) <= 0) return;\r\n                        try {\r\n                          const res = await fetch('/api/admin/credit', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                              'Authorization': `Bearer ${token}`,\r\n                              'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify({ user_id: selectedClient.id, amount: Number(amount) })\r\n                          });\r\n                          const data = await res.json();\r\n                          if (!data.success) throw new Error(data.message);\r\n                          toast.success('Balance credited!');\r\n                          setClientDetails(prev => ({\r\n                            ...prev,\r\n                            client: {\r\n                              ...prev.client,\r\n                              balance: data.data.balance\r\n                            }\r\n                          }));\r\n                          fetchClients();\r\n                        } catch (err) {\r\n                          toast.error(err.message || 'Credit failed');\r\n                        }\r\n                      }}\r\n                    >\r\n                      Credit Balance\r\n                    </button>\r\n                    <h3 className=\"font-semibold mt-4 mb-1\">Offers</h3>\r\n                    <div className=\"overflow-x-auto mb-2\">\r\n                      <table className=\"min-w-full text-xs\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th className=\"px-2 py-1\">Loot</th>\r\n                            <th className=\"px-2 py-1\">Amount</th>\r\n                            <th className=\"px-2 py-1\">Referrals</th>\r\n                            <th className=\"px-2 py-1\">Referral Amount</th>\r\n                            <th className=\"px-2 py-1\">Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {clientDetails.investments.map(inv => (\r\n                            <tr key={inv.id} className=\"border-t\">\r\n                              <td className=\"px-2 py-1\">{inv.loot_title}</td>\r\n                              <td className=\"px-2 py-1\">₹{inv.amount}</td>\r\n                              <td className=\"px-2 py-1\">{inv.referral_count}</td>\r\n                              <td className=\"px-2 py-1\">₹{inv.referral_amount || 0}</td>\r\n                              <td className=\"px-2 py-1\">{moment(inv.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <h3 className=\"font-semibold mt-4 mb-1\">Withdrawals</h3>\r\n                    <div className=\"overflow-x-auto mb-2\">\r\n                      <table className=\"min-w-full text-xs\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th className=\"px-2 py-1\">Amount</th>\r\n                            <th className=\"px-2 py-1\">UPI</th>\r\n                            <th className=\"px-2 py-1\">Status</th>\r\n                            <th className=\"px-2 py-1\">Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {clientDetails.withdrawals.map(wd => (\r\n                            <tr key={wd.id} className=\"border-t\">\r\n                              <td className=\"px-2 py-1\">₹{wd.amount}</td>\r\n                              <td className=\"px-2 py-1\">{wd.upi_id || '-'}</td>\r\n                              <td className=\"px-2 py-1\">{wd.status}</td>\r\n                              <td className=\"px-2 py-1\">{moment(wd.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <Button className=\"mt-2 w-full\" variant=\"secondary\" onClick={() => setShowClientModal(false)}>Close</Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          {tab === 'analytics' && (\r\n            <div>\r\n              <h2 className=\"text-xl font-bold mb-4\">Platform Analytics</h2>\r\n              {analytics ? (\r\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\r\n                  <div className=\"card p-4\"><div className=\"text-xs text-gray-500\">Total Clients</div><div className=\"text-2xl font-bold\">{analytics.overview.totalClients}</div></div>\r\n                  <div className=\"card p-4\"><div className=\"text-xs text-gray-500\">Total Loots</div><div className=\"text-2xl font-bold\">{analytics.overview.totalLoots}</div></div>\r\n                  <div className=\"card p-4\"><div className=\"text-xs text-gray-500\">Total Offers</div><div className=\"text-2xl font-bold\">{analytics.overview.totalInvestments}</div></div>\r\n                  <div className=\"card p-4\"><div className=\"text-xs text-gray-500\">Total Referrals</div><div className=\"text-2xl font-bold\">{analytics.overview.totalReferrals}</div></div>\r\n                  <div className=\"card p-4\"><div className=\"text-xs text-gray-500\">Total Earned</div><div className=\"text-2xl font-bold\">₹{analytics.overview.totalEarned}</div></div>\r\n                  <div className=\"card p-4\"><div className=\"text-xs text-gray-500\">Pending Withdrawals</div><div className=\"text-2xl font-bold\">{analytics.overview.pendingWithdrawals}</div></div>\r\n                </div>\r\n              ) : <div>Loading...</div>}\r\n              <h3 className=\"font-semibold mt-6 mb-2\">Recent Offers</h3>\r\n              <div className=\"overflow-x-auto mb-4\">\r\n                <table className=\"min-w-full text-xs bg-white rounded shadow\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-2 py-1\">User</th>\r\n                      <th className=\"px-2 py-1\">Loot</th>\r\n                      <th className=\"px-2 py-1\">Amount</th>\r\n                      <th className=\"px-2 py-1\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {analytics?.recentActivities?.investments?.map(inv => (\r\n                      <tr key={inv.id} className=\"border-t\">\r\n                        <td className=\"px-2 py-1\">{inv.username}</td>\r\n                        <td className=\"px-2 py-1\">{inv.loot_title}</td>\r\n                        <td className=\"px-2 py-1\">₹{inv.amount}</td>\r\n                        <td className=\"px-2 py-1\">{moment(inv.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <h3 className=\"font-semibold mt-6 mb-2\">Recent Referrals</h3>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full text-xs bg-white rounded shadow\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-2 py-1\">User</th>\r\n                      <th className=\"px-2 py-1\">Loot</th>\r\n                      <th className=\"px-2 py-1\">Amount</th>\r\n                      <th className=\"px-2 py-1\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {analytics?.recentActivities?.referrals?.map(ref => (\r\n                      <tr key={ref.id} className=\"border-t\">\r\n                        <td className=\"px-2 py-1\">{ref.username}</td>\r\n                        <td className=\"px-2 py-1\">{ref.loot_title}</td>\r\n                        <td className=\"px-2 py-1\">₹{ref.amount}</td>\r\n                        <td className=\"px-2 py-1\">{moment(ref.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab === 'withdrawals' && (\r\n            <div>\r\n              <h2 className=\"text-xl font-bold mb-4\">Withdrawal Requests</h2>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full bg-white rounded shadow\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-4 py-2\">User</th>\r\n                                              <th className=\"px-4 py-2\">Email</th>\r\n                        <th className=\"px-4 py-2\">Amount</th>\r\n                        <th className=\"px-4 py-2\">UPI</th>\r\n                        <th className=\"px-4 py-2\">Status</th>\r\n                        <th className=\"px-4 py-2\">Reference</th>\r\n                        <th className=\"px-4 py-2\">Notes</th>\r\n                      <th className=\"px-4 py-2\">Date</th>\r\n                      <th className=\"px-4 py-2\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {withdrawals.map(wd => (\r\n                      <tr key={wd.id} className=\"border-t\">\r\n                        <td className=\"px-4 py-2\">{wd.username}</td>\r\n                                                  <td className=\"px-4 py-2\">{wd.email}</td>\r\n                          <td className=\"px-4 py-2\">₹{wd.amount}</td>\r\n                          <td className=\"px-4 py-2\">{wd.upi_id || '-'}</td>\r\n                          <td className=\"px-4 py-2\">{wd.status}</td>\r\n                          <td className=\"px-4 py-2\">{wd.reference_number || '-'}</td>\r\n                          <td className=\"px-4 py-2\">{wd.notes || '-'}</td>\r\n                        <td className=\"px-4 py-2\">{moment(wd.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')}</td>\r\n                        <td className=\"px-4 py-2 flex gap-2\">\r\n                          {wd.status === 'pending' && (\r\n                            <>\r\n                              <Button variant=\"success\" size=\"sm\" onClick={() => handleWithdrawalAction(wd.id, 'approved')}>Approve</Button>\r\n                              <Button variant=\"danger\" size=\"sm\" onClick={() => handleWithdrawalAction(wd.id, 'rejected')}>Reject</Button>\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab === 'chat' && (\r\n            <div>\r\n              <h2 className=\"text-xl font-bold mb-4\">Admin Chat</h2>\r\n              <AdminChatBox />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Loot Modal */}\r\n      {showLootModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded shadow w-full max-w-2xl overflow-y-auto max-h-[90vh]\">\r\n            <h2 className=\"text-lg font-bold mb-4\">\r\n              {editingLoot ? 'Edit Loot' : 'Create New Loot'}\r\n            </h2>\r\n            <LootForm\r\n              loot={editingLoot}\r\n              onSuccess={handleLootSuccess}\r\n              onCancel={() => {\r\n                setShowLootModal(false);\r\n                setEditingLoot(null);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ","import React from 'react';\r\n\r\nexport default function Button({\r\n  children,\r\n  type = 'button',\r\n  variant = 'primary',\r\n  loading = false,\r\n  className = '',\r\n  size = 'md',\r\n  ...props\r\n}) {\r\n  const sizeClasses = {\r\n    sm: 'px-2 py-1 text-xs',\r\n    md: 'px-4 py-2 text-sm',\r\n    lg: 'px-6 py-3 text-base'\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={`btn btn-${variant} ${sizeClasses[size]} ${className}`}\r\n      disabled={loading || props.disabled}\r\n      {...props}\r\n    >\r\n      {loading ? (\r\n        <span className=\"animate-spin mr-2\">⏳</span>\r\n      ) : null}\r\n      {children}\r\n    </button>\r\n  );\r\n} ","import React from 'react';\r\n\r\nexport default function Input({ label, error, className = '', name, ...props }) {\r\n  return (\r\n    <div className={`mb-4 ${className}`}>\r\n      {label && <label className=\"block text-sm font-medium mb-1\">{label}</label>}\r\n      <input\r\n        name={name}\r\n        {...props}\r\n        className={`input ${error ? 'border-danger-500' : ''}`}\r\n      />\r\n      {error && <p className=\"text-danger-600 text-xs mt-1\">{error}</p>}\r\n    </div>\r\n  );\r\n} ","import React from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport default function Navbar() {\r\n  const { user, logout } = useAuth();\r\n  return (\r\n    <nav className=\"w-full bg-primary-600 text-white px-4 py-3 flex items-center justify-between shadow\">\r\n      <div className=\"font-bold text-xl tracking-wide\">\r\n        <a href={user?.role === 'admin' ? '/admin' : '/dashboard'}>Capital Rise</a>\r\n      </div>\r\n      <div className=\"flex items-center gap-4\">\r\n        {user && <span className=\"font-medium\">{user.username} ({user.role})</span>}\r\n        <button onClick={logout} className=\"btn btn-secondary text-primary-700\">Logout</button>\r\n      </div>\r\n    </nav>\r\n  );\r\n} "],"names":["LootForm","_ref","loot","onSuccess","onCancel","token","useAuth","form","setForm","useState","title","description","max_amount","redirect_url","is_active","errors","setErrors","loading","setLoading","handleChange","e","name","value","type","checked","target","prev","_jsxs","onSubmit","async","preventDefault","errs","validate","trim","isNaN","Number","Object","keys","length","url","id","method","res","fetch","headers","body","JSON","stringify","data","json","success","Error","message","toast","err","error","className","children","_jsx","Input","label","onChange","placeholder","min","Button","variant","onClick","socket","io","autoConnect","AdminChatBox","participants","setParticipants","selectedClient","setSelectedClient","messages","setMessages","input","setInput","messagesEndRef","useRef","useEffect","fetchParticipants","connect","emit","on","msg","sender_role","sender_id","toUserId","m","off","disconnect","fetchMessages","_messagesEndRef$curre","current","scrollIntoView","behavior","localStorage","getItem","clientId","map","p","username","email","_Fragment","i","sender_name","formattedTime","created_at","moment","tz","format","ref","receiver_id","Date","toISOString","TABS","key","AdminDashboard","_analytics$recentActi","_analytics$recentActi2","_analytics$recentActi3","_analytics$recentActi4","tab","setTab","loots","setLoots","clients","setClients","showClientModal","setShowClientModal","clientDetails","setClientDetails","analytics","setAnalytics","withdrawals","setWithdrawals","showLootModal","setShowLootModal","editingLoot","setEditingLoot","fetchLoots","fetchClients","fetchAnalytics","fetchWithdrawals","console","handleWithdrawalAction","status","notes","reference_number","prompt","test","Navbar","t","handleCreateLoot","size","handleEditLoot","window","confirm","handleDeleteLoot","client","balance","total_earned","total_investments","total_referrals","handleViewClient","amount","user_id","investments","inv","loot_title","referral_count","referral_amount","wd","upi_id","overview","totalClients","totalLoots","totalInvestments","totalReferrals","totalEarned","pendingWithdrawals","recentActivities","referrals","handleLootSuccess","props","sm","md","lg","disabled","user","logout","href","role"],"sourceRoot":""}