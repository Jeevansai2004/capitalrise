{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saije\\\\Downloads\\\\capital rise\\\\client\\\\src\\\\components\\\\AdminChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport Button from './Button';\nimport moment from 'moment-timezone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  autoConnect: false\n});\nexport default function AdminChatBox() {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const [isClientTyping, setIsClientTyping] = useState(false);\n  const typingTimeout = useRef(null);\n  useEffect(() => {\n    fetchParticipants();\n    socket.connect();\n    socket.emit('join-admin');\n    socket.on('new-message', msg => {\n      // Only add if for selected client\n      if (msg.sender_role === 'client' && msg.sender_id === (selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id) || msg.sender_role === 'admin' && msg.toUserId === (selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id)) {\n        setMessages(m => [...m, msg]);\n      }\n    });\n    return () => {\n      socket.off('new-message');\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [selectedClient]);\n  useEffect(() => {\n    if (selectedClient) fetchMessages(selectedClient.id);\n  }, [selectedClient]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    if (!selectedClient || !socket) return;\n    // Listen for client typing events\n    const handleClientTyping = data => {\n      if (data.userId === selectedClient.id) {\n        setIsClientTyping(true);\n        if (typingTimeout.current) clearTimeout(typingTimeout.current);\n        typingTimeout.current = setTimeout(() => setIsClientTyping(false), 2000);\n      }\n    };\n    socket.on('client-typing', handleClientTyping);\n    return () => {\n      socket.off('client-typing', handleClientTyping);\n      if (typingTimeout.current) clearTimeout(typingTimeout.current);\n    };\n  }, [selectedClient, socket]);\n  const fetchParticipants = async () => {\n    const token = localStorage.getItem('token');\n    const res = await fetch('/api/chat/participants', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setParticipants(data.data);\n  };\n  const fetchMessages = async clientId => {\n    const token = localStorage.getItem('token');\n    const res = await fetch(`/api/chat/conversation/${clientId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setMessages(data.data);\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim() || !selectedClient) return;\n    const messageText = input.trim();\n    setInput('');\n\n    // Create message object for immediate display\n    const newMessage = {\n      message: messageText,\n      sender_id: 'admin',\n      sender_name: 'Admin',\n      sender_role: 'admin',\n      toUserId: selectedClient.id,\n      created_at: new Date().toISOString()\n    };\n\n    // Add message to local state immediately\n    setMessages(m => [...m, newMessage]);\n    try {\n      // Save to DB\n      const token = localStorage.getItem('token');\n      await fetch('/api/chat/messages', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageText,\n          receiver_id: selectedClient.id\n        })\n      });\n\n      // Emit for real-time\n      socket.emit('send-message', {\n        message: messageText,\n        sender_id: 'admin',\n        toUserId: selectedClient.id,\n        sender_name: 'Admin',\n        sender_role: 'admin',\n        created_at: newMessage.created_at\n      });\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      // Remove the message if it failed to send\n      setMessages(m => m.filter(msg => msg !== newMessage));\n    }\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    if (socket && selectedClient) {\n      socket.emit('typing', {\n        sender_role: 'admin',\n        toUserId: selectedClient.id\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-white rounded shadow p-2 h-96 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), participants.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded cursor-pointer ${(selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id) === p.id ? 'bg-primary-100 text-primary-900' : 'hover:bg-gray-100'}`,\n        onClick: () => setSelectedClient(p),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium\",\n          children: p.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: p.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-white rounded shadow p-2 flex flex-col h-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), selectedClient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto bg-gray-50 rounded border border-gray-200 p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [messages.map((msg, i) => {\n              const isAdminMessage = msg.sender_role === 'admin';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: isAdminMessage ? 'flex-end' : 'flex-start',\n                    marginBottom: 4\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      maxWidth: '80%',\n                      padding: '8px 12px',\n                      borderRadius: 12,\n                      background: isAdminMessage ? '#2563eb' : '#e5e7eb',\n                      color: isAdminMessage ? 'white' : 'black',\n                      wordWrap: 'break-word'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '12px',\n                        opacity: 0.8,\n                        marginBottom: 2\n                      },\n                      children: msg.sender_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: msg.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '10px',\n                        opacity: 0.7,\n                        marginTop: 4,\n                        textAlign: isAdminMessage ? 'right' : 'left'\n                      },\n                      children: msg.created_at ? moment.utc(msg.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"flex gap-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input flex-1\",\n            placeholder: \"Type your message...\",\n            value: input,\n            onChange: handleInputChange,\n            onBlur: () => socket && selectedClient && socket.emit('stop-typing', {\n              sender_role: 'admin',\n              toUserId: selectedClient.id\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), isClientTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0 16px 8px',\n            color: '#2563eb',\n            fontSize: 13,\n            fontWeight: 500\n          },\n          children: [\"Client is typing\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-dots\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400\",\n        children: \"Select a client to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChatBox, \"UvlSH3pj7RVeCdsnz1o9lbEmI+4=\");\n_c = AdminChatBox;\nvar _c;\n$RefreshReg$(_c, \"AdminChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Button","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","autoConnect","AdminChatBox","_s","participants","setParticipants","selectedClient","setSelectedClient","messages","setMessages","input","setInput","messagesEndRef","isClientTyping","setIsClientTyping","typingTimeout","fetchParticipants","connect","emit","on","msg","sender_role","sender_id","id","toUserId","m","off","disconnect","fetchMessages","_messagesEndRef$curre","current","scrollIntoView","behavior","handleClientTyping","data","userId","clearTimeout","setTimeout","token","localStorage","getItem","res","fetch","headers","json","success","clientId","sendMessage","e","preventDefault","trim","messageText","newMessage","message","sender_name","created_at","Date","toISOString","method","body","JSON","stringify","receiver_id","error","console","filter","handleInputChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","onClick","username","email","i","isAdminMessage","style","display","justifyContent","marginBottom","maxWidth","padding","borderRadius","background","color","wordWrap","fontSize","opacity","marginTop","textAlign","utc","tz","format","ref","onSubmit","placeholder","onChange","onBlur","type","variant","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/saije/Downloads/capital rise/client/src/components/AdminChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Button from './Button';\r\nimport moment from 'moment-timezone';\r\n\r\nconst socket = io('http://localhost:5000', { autoConnect: false });\r\n\r\nexport default function AdminChatBox() {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const [isClientTyping, setIsClientTyping] = useState(false);\r\n  const typingTimeout = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchParticipants();\r\n    socket.connect();\r\n    socket.emit('join-admin');\r\n\r\n    socket.on('new-message', msg => {\r\n      // Only add if for selected client\r\n      if (\r\n        (msg.sender_role === 'client' && msg.sender_id === selectedClient?.id) ||\r\n        (msg.sender_role === 'admin' && msg.toUserId === selectedClient?.id)\r\n      ) {\r\n        setMessages(m => [...m, msg]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('new-message');\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClient) fetchMessages(selectedClient.id);\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedClient || !socket) return;\r\n    // Listen for client typing events\r\n    const handleClientTyping = data => {\r\n      if (data.userId === selectedClient.id) {\r\n        setIsClientTyping(true);\r\n        if (typingTimeout.current) clearTimeout(typingTimeout.current);\r\n        typingTimeout.current = setTimeout(() => setIsClientTyping(false), 2000);\r\n      }\r\n    };\r\n    socket.on('client-typing', handleClientTyping);\r\n    return () => {\r\n      socket.off('client-typing', handleClientTyping);\r\n      if (typingTimeout.current) clearTimeout(typingTimeout.current);\r\n    };\r\n  }, [selectedClient, socket]);\r\n\r\n  const fetchParticipants = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch('/api/chat/participants', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setParticipants(data.data);\r\n  };\r\n\r\n  const fetchMessages = async clientId => {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(`/api/chat/conversation/${clientId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setMessages(data.data);\r\n  };\r\n\r\n  const sendMessage = async e => {\r\n    e.preventDefault();\r\n    if (!input.trim() || !selectedClient) return;\r\n\r\n    const messageText = input.trim();\r\n    setInput('');\r\n\r\n    // Create message object for immediate display\r\n    const newMessage = {\r\n      message: messageText,\r\n      sender_id: 'admin',\r\n      sender_name: 'Admin',\r\n      sender_role: 'admin',\r\n      toUserId: selectedClient.id,\r\n      created_at: new Date().toISOString(),\r\n    };\r\n\r\n    // Add message to local state immediately\r\n    setMessages(m => [...m, newMessage]);\r\n\r\n    try {\r\n      // Save to DB\r\n      const token = localStorage.getItem('token');\r\n      await fetch('/api/chat/messages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ message: messageText, receiver_id: selectedClient.id })\r\n      });\r\n\r\n      // Emit for real-time\r\n      socket.emit('send-message', {\r\n        message: messageText,\r\n        sender_id: 'admin',\r\n        toUserId: selectedClient.id,\r\n        sender_name: 'Admin',\r\n        sender_role: 'admin',\r\n        created_at: newMessage.created_at\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n      // Remove the message if it failed to send\r\n      setMessages(m => m.filter(msg => msg !== newMessage));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setInput(e.target.value);\r\n    if (socket && selectedClient) {\r\n      socket.emit('typing', { sender_role: 'admin', toUserId: selectedClient.id });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-4\">\r\n      <div className=\"w-64 bg-white rounded shadow p-2 h-96 overflow-y-auto\">\r\n        <h3 className=\"font-semibold mb-2\">Clients</h3>\r\n        {participants.map(p => (\r\n          <div\r\n            key={p.id}\r\n            className={`p-2 rounded cursor-pointer ${selectedClient?.id === p.id ? 'bg-primary-100 text-primary-900' : 'hover:bg-gray-100'}`}\r\n            onClick={() => setSelectedClient(p)}\r\n          >\r\n            <div className=\"font-medium\">{p.username}</div>\r\n            <div className=\"text-xs text-gray-500\">{p.email}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex-1 bg-white rounded shadow p-2 flex flex-col h-96\">\r\n        <h3 className=\"font-semibold mb-2\">Chat</h3>\r\n        {selectedClient ? (\r\n          <>\r\n            <div className=\"flex-1 overflow-y-auto bg-gray-50 rounded border border-gray-200 p-2\">\r\n              <div className=\"flex flex-col gap-2\">\r\n                {messages.map((msg, i) => {\r\n                  const isAdminMessage = msg.sender_role === 'admin';\r\n                  return (\r\n                    <div key={i} className=\"mb-2\">\r\n                      <div style={{ \r\n                        display: 'flex', \r\n                        justifyContent: isAdminMessage ? 'flex-end' : 'flex-start',\r\n                        marginBottom: 4 \r\n                      }}>\r\n                        <div style={{\r\n                          maxWidth: '80%',\r\n                          padding: '8px 12px',\r\n                          borderRadius: 12,\r\n                          background: isAdminMessage ? '#2563eb' : '#e5e7eb',\r\n                          color: isAdminMessage ? 'white' : 'black',\r\n                          wordWrap: 'break-word'\r\n                        }}>\r\n                          <div style={{ fontSize: '12px', opacity: 0.8, marginBottom: 2 }}>\r\n                            {msg.sender_name}\r\n                          </div>\r\n                          <div>{msg.message}</div>\r\n                          <div style={{ fontSize: '10px', opacity: 0.7, marginTop: 4, textAlign: isAdminMessage ? 'right' : 'left' }}>\r\n                            {msg.created_at ? moment.utc(msg.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A') : ''}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            </div>\r\n            <form onSubmit={sendMessage} className=\"flex gap-2 mt-2\">\r\n              <input\r\n                className=\"input flex-1\"\r\n                placeholder=\"Type your message...\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n                onBlur={() => socket && selectedClient && socket.emit('stop-typing', { sender_role: 'admin', toUserId: selectedClient.id })}\r\n              />\r\n              <Button type=\"submit\" variant=\"primary\">Send</Button>\r\n            </form>\r\n            {isClientTyping && (\r\n              <div style={{ padding: '0 16px 8px', color: '#2563eb', fontSize: 13, fontWeight: 500 }}>\r\n                Client is typing\r\n                <span className=\"typing-dots\">\r\n                  <span>.</span><span>.</span><span>.</span>\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400\">Select a client to chat</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,MAAM,GAAGP,EAAE,CAAC,uBAAuB,EAAE;EAAEQ,WAAW,EAAE;AAAM,CAAC,CAAC;AAElE,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMoB,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMuB,aAAa,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd0B,iBAAiB,CAAC,CAAC;IACnBhB,MAAM,CAACiB,OAAO,CAAC,CAAC;IAChBjB,MAAM,CAACkB,IAAI,CAAC,YAAY,CAAC;IAEzBlB,MAAM,CAACmB,EAAE,CAAC,aAAa,EAAEC,GAAG,IAAI;MAC9B;MACA,IACGA,GAAG,CAACC,WAAW,KAAK,QAAQ,IAAID,GAAG,CAACE,SAAS,MAAKhB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEiB,EAAE,KACpEH,GAAG,CAACC,WAAW,KAAK,OAAO,IAAID,GAAG,CAACI,QAAQ,MAAKlB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEiB,EAAE,CAAC,EACpE;QACAd,WAAW,CAACgB,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAEL,GAAG,CAAC,CAAC;MAC/B;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXpB,MAAM,CAAC0B,GAAG,CAAC,aAAa,CAAC;MACzB1B,MAAM,CAAC2B,UAAU,CAAC,CAAC;IACrB,CAAC;IACD;EACF,CAAC,EAAE,CAACrB,cAAc,CAAC,CAAC;EAEpBhB,SAAS,CAAC,MAAM;IACd,IAAIgB,cAAc,EAAEsB,aAAa,CAACtB,cAAc,CAACiB,EAAE,CAAC;EACtD,CAAC,EAAE,CAACjB,cAAc,CAAC,CAAC;EAEpBhB,SAAS,CAAC,MAAM;IAAA,IAAAuC,qBAAA;IACd,CAAAA,qBAAA,GAAAjB,cAAc,CAACkB,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACxB,QAAQ,CAAC,CAAC;EAEdlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,cAAc,IAAI,CAACN,MAAM,EAAE;IAChC;IACA,MAAMiC,kBAAkB,GAAGC,IAAI,IAAI;MACjC,IAAIA,IAAI,CAACC,MAAM,KAAK7B,cAAc,CAACiB,EAAE,EAAE;QACrCT,iBAAiB,CAAC,IAAI,CAAC;QACvB,IAAIC,aAAa,CAACe,OAAO,EAAEM,YAAY,CAACrB,aAAa,CAACe,OAAO,CAAC;QAC9Df,aAAa,CAACe,OAAO,GAAGO,UAAU,CAAC,MAAMvB,iBAAiB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC1E;IACF,CAAC;IACDd,MAAM,CAACmB,EAAE,CAAC,eAAe,EAAEc,kBAAkB,CAAC;IAC9C,OAAO,MAAM;MACXjC,MAAM,CAAC0B,GAAG,CAAC,eAAe,EAAEO,kBAAkB,CAAC;MAC/C,IAAIlB,aAAa,CAACe,OAAO,EAAEM,YAAY,CAACrB,aAAa,CAACe,OAAO,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,CAACxB,cAAc,EAAEN,MAAM,CAAC,CAAC;EAE5B,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMsB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MAChDC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMJ,IAAI,GAAG,MAAMO,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,IAAIV,IAAI,CAACW,OAAO,EAAExC,eAAe,CAAC6B,IAAI,CAACA,IAAI,CAAC;EAC9C,CAAC;EAED,MAAMN,aAAa,GAAG,MAAMkB,QAAQ,IAAI;IACtC,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0BAA0BI,QAAQ,EAAE,EAAE;MAC5DH,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMJ,IAAI,GAAG,MAAMO,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,IAAIV,IAAI,CAACW,OAAO,EAAEpC,WAAW,CAACyB,IAAI,CAACA,IAAI,CAAC;EAC1C,CAAC;EAED,MAAMa,WAAW,GAAG,MAAMC,CAAC,IAAI;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvC,KAAK,CAACwC,IAAI,CAAC,CAAC,IAAI,CAAC5C,cAAc,EAAE;IAEtC,MAAM6C,WAAW,GAAGzC,KAAK,CAACwC,IAAI,CAAC,CAAC;IAChCvC,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,MAAMyC,UAAU,GAAG;MACjBC,OAAO,EAAEF,WAAW;MACpB7B,SAAS,EAAE,OAAO;MAClBgC,WAAW,EAAE,OAAO;MACpBjC,WAAW,EAAE,OAAO;MACpBG,QAAQ,EAAElB,cAAc,CAACiB,EAAE;MAC3BgC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;;IAED;IACAhD,WAAW,CAACgB,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE2B,UAAU,CAAC,CAAC;IAEpC,IAAI;MACF;MACA,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAME,KAAK,CAAC,oBAAoB,EAAE;QAChCgB,MAAM,EAAE,MAAM;QACdf,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,OAAO,EAAEF,WAAW;UAAEW,WAAW,EAAExD,cAAc,CAACiB;QAAG,CAAC;MAC/E,CAAC,CAAC;;MAEF;MACAvB,MAAM,CAACkB,IAAI,CAAC,cAAc,EAAE;QAC1BmC,OAAO,EAAEF,WAAW;QACpB7B,SAAS,EAAE,OAAO;QAClBE,QAAQ,EAAElB,cAAc,CAACiB,EAAE;QAC3B+B,WAAW,EAAE,OAAO;QACpBjC,WAAW,EAAE,OAAO;QACpBkC,UAAU,EAAEH,UAAU,CAACG;MACzB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;MACAtD,WAAW,CAACgB,CAAC,IAAIA,CAAC,CAACwC,MAAM,CAAC7C,GAAG,IAAIA,GAAG,KAAKgC,UAAU,CAAC,CAAC;IACvD;EACF,CAAC;EAED,MAAMc,iBAAiB,GAAGlB,CAAC,IAAI;IAC7BrC,QAAQ,CAACqC,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAC;IACxB,IAAIpE,MAAM,IAAIM,cAAc,EAAE;MAC5BN,MAAM,CAACkB,IAAI,CAAC,QAAQ,EAAE;QAAEG,WAAW,EAAE,OAAO;QAAEG,QAAQ,EAAElB,cAAc,CAACiB;MAAG,CAAC,CAAC;IAC9E;EACF,CAAC;EAED,oBACE1B,OAAA;IAAKwE,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBzE,OAAA;MAAKwE,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBACpEzE,OAAA;QAAIwE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9CtE,YAAY,CAACuE,GAAG,CAACC,CAAC,iBACjB/E,OAAA;QAEEwE,SAAS,EAAE,8BAA8B,CAAA/D,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEiB,EAAE,MAAKqD,CAAC,CAACrD,EAAE,GAAG,iCAAiC,GAAG,mBAAmB,EAAG;QACjIsD,OAAO,EAAEA,CAAA,KAAMtE,iBAAiB,CAACqE,CAAC,CAAE;QAAAN,QAAA,gBAEpCzE,OAAA;UAAKwE,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEM,CAAC,CAACE;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/C7E,OAAA;UAAKwE,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEM,CAAC,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GALjDE,CAAC,CAACrD,EAAE;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7E,OAAA;MAAKwE,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBACpEzE,OAAA;QAAIwE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3CpE,cAAc,gBACbT,OAAA,CAAAE,SAAA;QAAAuE,QAAA,gBACEzE,OAAA;UAAKwE,SAAS,EAAC,sEAAsE;UAAAC,QAAA,eACnFzE,OAAA;YAAKwE,SAAS,EAAC,qBAAqB;YAAAC,QAAA,GACjC9D,QAAQ,CAACmE,GAAG,CAAC,CAACvD,GAAG,EAAE4D,CAAC,KAAK;cACxB,MAAMC,cAAc,GAAG7D,GAAG,CAACC,WAAW,KAAK,OAAO;cAClD,oBACExB,OAAA;gBAAawE,SAAS,EAAC,MAAM;gBAAAC,QAAA,eAC3BzE,OAAA;kBAAKqF,KAAK,EAAE;oBACVC,OAAO,EAAE,MAAM;oBACfC,cAAc,EAAEH,cAAc,GAAG,UAAU,GAAG,YAAY;oBAC1DI,YAAY,EAAE;kBAChB,CAAE;kBAAAf,QAAA,eACAzE,OAAA;oBAAKqF,KAAK,EAAE;sBACVI,QAAQ,EAAE,KAAK;sBACfC,OAAO,EAAE,UAAU;sBACnBC,YAAY,EAAE,EAAE;sBAChBC,UAAU,EAAER,cAAc,GAAG,SAAS,GAAG,SAAS;sBAClDS,KAAK,EAAET,cAAc,GAAG,OAAO,GAAG,OAAO;sBACzCU,QAAQ,EAAE;oBACZ,CAAE;oBAAArB,QAAA,gBACAzE,OAAA;sBAAKqF,KAAK,EAAE;wBAAEU,QAAQ,EAAE,MAAM;wBAAEC,OAAO,EAAE,GAAG;wBAAER,YAAY,EAAE;sBAAE,CAAE;sBAAAf,QAAA,EAC7DlD,GAAG,CAACkC;oBAAW;sBAAAiB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACb,CAAC,eACN7E,OAAA;sBAAAyE,QAAA,EAAMlD,GAAG,CAACiC;oBAAO;sBAAAkB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACxB7E,OAAA;sBAAKqF,KAAK,EAAE;wBAAEU,QAAQ,EAAE,MAAM;wBAAEC,OAAO,EAAE,GAAG;wBAAEC,SAAS,EAAE,CAAC;wBAAEC,SAAS,EAAEd,cAAc,GAAG,OAAO,GAAG;sBAAO,CAAE;sBAAAX,QAAA,EACxGlD,GAAG,CAACmC,UAAU,GAAG5D,MAAM,CAACqG,GAAG,CAAC5E,GAAG,CAACmC,UAAU,CAAC,CAAC0C,EAAE,CAAC,cAAc,CAAC,CAACC,MAAM,CAAC,mBAAmB,CAAC,GAAG;oBAAE;sBAAA3B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC7F,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC,GAtBEM,CAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAuBN,CAAC;YAEV,CAAC,CAAC,eACF7E,OAAA;cAAKsG,GAAG,EAAEvF;YAAe;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN7E,OAAA;UAAMuG,QAAQ,EAAErD,WAAY;UAACsB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBACtDzE,OAAA;YACEwE,SAAS,EAAC,cAAc;YACxBgC,WAAW,EAAC,sBAAsB;YAClCjC,KAAK,EAAE1D,KAAM;YACb4F,QAAQ,EAAEpC,iBAAkB;YAC5BqC,MAAM,EAAEA,CAAA,KAAMvG,MAAM,IAAIM,cAAc,IAAIN,MAAM,CAACkB,IAAI,CAAC,aAAa,EAAE;cAAEG,WAAW,EAAE,OAAO;cAAEG,QAAQ,EAAElB,cAAc,CAACiB;YAAG,CAAC;UAAE;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7H,CAAC,eACF7E,OAAA,CAACH,MAAM;YAAC8G,IAAI,EAAC,QAAQ;YAACC,OAAO,EAAC,SAAS;YAAAnC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,EACN7D,cAAc,iBACbhB,OAAA;UAAKqF,KAAK,EAAE;YAAEK,OAAO,EAAE,YAAY;YAAEG,KAAK,EAAE,SAAS;YAAEE,QAAQ,EAAE,EAAE;YAAEc,UAAU,EAAE;UAAI,CAAE;UAAApC,QAAA,GAAC,kBAEtF,eAAAzE,OAAA;YAAMwE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC3BzE,OAAA;cAAAyE,QAAA,EAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAAA7E,OAAA;cAAAyE,QAAA,EAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAAA7E,OAAA;cAAAyE,QAAA,EAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAA,eACD,CAAC,gBAEH7E,OAAA;QAAKwE,SAAS,EAAC,uDAAuD;QAAAC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACpG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvE,EAAA,CArNuBD,YAAY;AAAAyG,EAAA,GAAZzG,YAAY;AAAA,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}