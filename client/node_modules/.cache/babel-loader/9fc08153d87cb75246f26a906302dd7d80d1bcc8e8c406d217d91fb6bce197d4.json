{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saije\\\\Downloads\\\\capital rise\\\\client\\\\src\\\\pages\\\\ClientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport Navbar from '../components/Navbar';\nimport LootCard from '../components/LootCard';\nimport BalanceCard from '../components/BalanceCard';\nimport ReferralCard from '../components/ReferralCard';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport toast from 'react-hot-toast';\nimport ChatBox from '../components/ChatBox';\nimport moment from 'moment-timezone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClientDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const token = localStorage.getItem('token');\n  const [loots, setLoots] = useState([]);\n  const [balance, setBalance] = useState({\n    balance: 0,\n    total_earned: 0\n  });\n  const [investments, setInvestments] = useState([]);\n  const [referrals, setReferrals] = useState([]);\n  const [withdrawals, setWithdrawals] = useState([]);\n  const [showInvestModal, setShowInvestModal] = useState(false);\n  const [showWithdrawModal, setShowWithdrawModal] = useState(false);\n  const [selectedLoot, setSelectedLoot] = useState(null);\n  const [investAmount, setInvestAmount] = useState('');\n  const [customerAmount, setCustomerAmount] = useState('');\n  const [earnAmount, setEarnAmount] = useState('');\n  const [investError, setInvestError] = useState('');\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [withdrawPassword, setWithdrawPassword] = useState('');\n  const [withdrawError, setWithdrawError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  // Profile state\n  const [changeWithdrawalPassword, setChangeWithdrawalPassword] = useState(false);\n  const [changeUpiId, setChangeUpiId] = useState(false);\n  const [withdrawalForm, setWithdrawalForm] = useState({\n    current_withdrawal_password: '',\n    new_withdrawal_password: ''\n  });\n  const [upiForm, setUpiForm] = useState({\n    account_password: '',\n    new_upi_id: ''\n  });\n  const [withdrawalErrors, setWithdrawalErrors] = useState({});\n  const [upiErrors, setUpiErrors] = useState({});\n  const TABS = [{\n    key: 'dashboard',\n    label: 'Dashboard'\n  }, {\n    key: 'withdrawals',\n    label: 'Withdrawal History'\n  }, {\n    key: 'custom-offers',\n    label: 'Custom Offers'\n  }, {\n    key: 'referrals',\n    label: 'Referral History'\n  }, {\n    key: 'profile',\n    label: 'Profile'\n  }];\n  useEffect(() => {\n    fetchLoots();\n    fetchBalance();\n    fetchInvestments();\n    fetchReferrals();\n    fetchWithdrawals();\n  }, []);\n  const fetchLoots = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/loots', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) {\n      console.log('Loots fetched:', data.data);\n      setLoots(data.data);\n    } else {\n      console.error('Failed to fetch loots:', data.message);\n    }\n  };\n  const fetchBalance = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/balance', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setBalance(data.data);\n  };\n  const fetchInvestments = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/investments', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) {\n      console.log('Investments fetched:', data.data);\n      setInvestments(data.data);\n    } else {\n      console.error('Failed to fetch investments:', data.message);\n    }\n  };\n  const fetchReferrals = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/referrals', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setReferrals(data.data);\n  };\n  const fetchWithdrawals = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/withdrawals', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setWithdrawals(data.data);\n  };\n  useEffect(() => {\n    if (token) {\n      fetchLoots();\n      fetchBalance();\n      fetchInvestments();\n      fetchReferrals();\n      fetchWithdrawals();\n      fetchLeaderboardData();\n      fetchLeaderboardHistory();\n    }\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchLeaderboardData = async () => {\n    try {\n      const res = await fetch('/api/client/leaderboard/position', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      if (data.success && data.data.hasActiveSeason) {\n        const {\n          clientEntry,\n          topEntries,\n          totalParticipants,\n          season\n        } = data.data;\n\n        // Update current rank\n        document.getElementById('currentRank').textContent = clientEntry ? clientEntry.rank : '-';\n\n        // Update season earnings\n        document.getElementById('seasonEarnings').textContent = clientEntry ? `₹${clientEntry.total_earned}` : '₹0.00';\n\n        // Update total participants\n        document.getElementById('totalParticipants').textContent = totalParticipants;\n\n        // Update season info\n        document.getElementById('seasonName').textContent = season.name;\n        document.getElementById('seasonDuration').textContent = `${moment(season.start_date).format('DD/MM/YYYY')} - ${moment(season.end_date).format('DD/MM/YYYY')}`;\n        document.getElementById('bonusAmount').textContent = `₹${season.bonus_amount}`;\n\n        // Update leaderboard table\n        const leaderboardTable = document.getElementById('leaderboardTable');\n        leaderboardTable.innerHTML = '';\n        topEntries.forEach((entry, index) => {\n          const row = document.createElement('tr');\n          row.className = 'border-t';\n          row.innerHTML = `\n            <td className=\"px-4 py-2\">${entry.rank}</td>\n            <td className=\"px-4 py-2\">${entry.username}</td>\n            <td className=\"px-4 py-2 font-medium\">₹${entry.total_earned}</td>\n          `;\n          leaderboardTable.appendChild(row);\n        });\n      } else {\n        // No active season\n        document.getElementById('currentRank').textContent = '-';\n        document.getElementById('seasonEarnings').textContent = '₹0.00';\n        document.getElementById('totalParticipants').textContent = '-';\n        document.getElementById('seasonName').textContent = 'No Active Season';\n        document.getElementById('seasonDuration').textContent = 'No season currently running';\n        document.getElementById('bonusAmount').textContent = '₹0';\n        const leaderboardTable = document.getElementById('leaderboardTable');\n        leaderboardTable.innerHTML = '<tr><td colSpan=\"3\" className=\"text-center py-4 text-gray-500\">No active season</td></tr>';\n      }\n    } catch (error) {\n      console.error('Error fetching leaderboard data:', error);\n    }\n  };\n  const fetchLeaderboardHistory = async () => {\n    try {\n      const res = await fetch('/api/client/leaderboard/history', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      if (data.success) {\n        const historyTable = document.getElementById('leaderboardHistoryTable');\n        historyTable.innerHTML = '';\n        if (data.data.length === 0) {\n          historyTable.innerHTML = '<tr><td colSpan=\"5\" className=\"text-center py-4 text-gray-500\">No history available</td></tr>';\n          return;\n        }\n        data.data.forEach(season => {\n          const row = document.createElement('tr');\n          row.className = 'border-t';\n          const status = season.won_bonus ? 'Winner' : 'Participated';\n          const rankText = season.rank ? `#${season.rank}` : 'N/A';\n          const earningsText = season.total_earned ? `₹${season.total_earned}` : '₹0';\n          const bonusText = season.won_bonus ? `₹${season.won_bonus}` : '-';\n          row.innerHTML = `\n            <td className=\"px-4 py-2\">${season.name}</td>\n            <td className=\"px-4 py-2\">${rankText}</td>\n            <td className=\"px-4 py-2\">${earningsText}</td>\n            <td className=\"px-4 py-2\">${bonusText}</td>\n            <td className=\"px-4 py-2\">\n              <span className=\"badge ${season.won_bonus ? 'badge-success' : 'badge-secondary'}\">${status}</span>\n            </td>\n          `;\n          historyTable.appendChild(row);\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching leaderboard history:', error);\n    }\n  };\n  const handleInvest = loot => {\n    console.log('Investing in loot:', loot);\n    setSelectedLoot(loot);\n    setInvestAmount('');\n    setCustomerAmount('');\n    setEarnAmount('');\n    setInvestError('');\n    setShowInvestModal(true);\n  };\n  const submitInvest = async e => {\n    e.preventDefault();\n    setInvestError('');\n\n    // Validation\n    if (!customerAmount || isNaN(customerAmount) || Number(customerAmount) <= 0) {\n      setInvestError('Enter a valid customer amount');\n      return;\n    }\n    if (!earnAmount || isNaN(earnAmount) || Number(earnAmount) <= 0) {\n      setInvestError('Enter a valid earn amount');\n      return;\n    }\n    const totalAmount = Number(customerAmount) + Number(earnAmount);\n    if (totalAmount > selectedLoot.max_amount) {\n      setInvestError(`Total amount (₹${totalAmount}) cannot exceed ₹${selectedLoot.max_amount}`);\n      return;\n    }\n    if (Number(earnAmount) >= Number(customerAmount)) {\n      setInvestError('Earn amount should be less than customer amount');\n      return;\n    }\n    console.log('Submitting custom investment:', {\n      loot_id: selectedLoot.id,\n      customer_amount: customerAmount,\n      earn_amount: earnAmount,\n      total_amount: totalAmount\n    });\n    setLoading(true);\n    try {\n      const requestBody = {\n        loot_id: selectedLoot.id,\n        customer_amount: Number(customerAmount),\n        earn_amount: Number(earnAmount),\n        total_amount: totalAmount\n      };\n      console.log('Sending request to /api/client/invest with body:', requestBody);\n      console.log('Token:', token ? 'Present' : 'Missing');\n      const res = await fetch('/api/client/invest', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log('Response status:', res.status);\n      console.log('Response headers:', res.headers);\n      const data = await res.json();\n      console.log('Investment response:', data);\n      if (!data.success) throw new Error(data.message);\n      toast.success('Custom offer created successfully!');\n      setShowInvestModal(false);\n      fetchInvestments();\n      fetchBalance();\n    } catch (err) {\n      console.error('Investment error:', err);\n      setInvestError(err.message || 'Investment failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWithdraw = () => {\n    setWithdrawAmount('');\n    setWithdrawPassword('');\n    setWithdrawError('');\n    setShowWithdrawModal(true);\n  };\n\n  // Profile functions\n  const handleWithdrawalPasswordChange = async e => {\n    e.preventDefault();\n    const errs = {};\n    if (!withdrawalForm.current_withdrawal_password) errs.current_withdrawal_password = 'Current password is required';\n    if (!withdrawalForm.new_withdrawal_password) errs.new_withdrawal_password = 'New password is required';else if (withdrawalForm.new_withdrawal_password.length < 4) errs.new_withdrawal_password = 'New password must be at least 4 characters';\n    if (Object.keys(errs).length) {\n      setWithdrawalErrors(errs);\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/change-withdrawal-password', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(withdrawalForm)\n      });\n      const data = await res.json();\n      if (!data.success) throw new Error(data.message);\n      toast.success('Withdrawal password changed successfully!');\n      setChangeWithdrawalPassword(false);\n      setWithdrawalForm({\n        current_withdrawal_password: '',\n        new_withdrawal_password: ''\n      });\n      setWithdrawalErrors({});\n    } catch (err) {\n      toast.error(err.message || 'Failed to change withdrawal password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpiIdChange = async e => {\n    e.preventDefault();\n    const errs = {};\n    if (!upiForm.account_password) errs.account_password = 'Account password is required';\n    if (!upiForm.new_upi_id) errs.new_upi_id = 'New UPI ID is required';else if (upiForm.new_upi_id.length < 3) errs.new_upi_id = 'UPI ID must be at least 3 characters';\n    if (Object.keys(errs).length) {\n      setUpiErrors(errs);\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/change-upi', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(upiForm)\n      });\n      const data = await res.json();\n      if (!data.success) throw new Error(data.message);\n      toast.success('UPI ID changed successfully!');\n      setChangeUpiId(false);\n      setUpiForm({\n        account_password: '',\n        new_upi_id: ''\n      });\n      setUpiErrors({});\n      // Update user data in auth context\n      auth.updateUser({\n        upi_id: upiForm.new_upi_id\n      });\n    } catch (err) {\n      toast.error(err.message || 'Failed to change UPI ID');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitWithdraw = async e => {\n    e.preventDefault();\n    setWithdrawError('');\n    if (!withdrawAmount || isNaN(withdrawAmount) || Number(withdrawAmount) <= 0) {\n      setWithdrawError('Enter a valid amount');\n      return;\n    }\n    if (Number(withdrawAmount) > balance.balance) {\n      setWithdrawError('Cannot withdraw more than balance');\n      return;\n    }\n    if (!withdrawPassword || withdrawPassword.trim() === '') {\n      setWithdrawError('Withdrawal password is required');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('/api/client/withdraw', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: withdrawAmount,\n          withdrawal_password: withdrawPassword.trim()\n        })\n      });\n      const data = await res.json();\n      if (!data.success) throw new Error(data.message);\n      toast.success('Withdrawal request submitted!');\n      setShowWithdrawModal(false);\n      fetchBalance();\n      fetchWithdrawals();\n    } catch (err) {\n      setWithdrawError(err.message || 'Withdrawal failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto py-8 px-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mb-6 border-b\",\n        children: TABS.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-4 py-2 font-medium border-b-2 transition-colors duration-150 ${activeTab === tab.key ? 'border-primary-600 text-primary-700' : 'border-transparent text-gray-500 hover:text-primary-600'}`,\n          onClick: () => setActiveTab(tab.key),\n          children: tab.label\n        }, tab.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BalanceCard, {\n          balance: balance.balance,\n          totalEarned: balance.total_earned\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), loots && loots.length > 0 && loots.map(loot => loot && /*#__PURE__*/_jsxDEV(LootCard, {\n          loot: loot,\n          onInvest: handleInvest\n        }, loot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 69\n        }, this)), /*#__PURE__*/_jsxDEV(ReferralCard, {\n          referrals: referrals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === 'withdrawals' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: withdrawals.map(withdrawal => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 20\n            }, this), \" \\u20B9\", withdrawal.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 20\n            }, this), \" \", withdrawal.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 20\n            }, this), \" \", moment(withdrawal.created_at).format('DD/MM/YYYY HH:mm')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this), withdrawal.status === 'completed' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Completed at:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 22\n            }, this), \" \", moment(withdrawal.completed_at).format('DD/MM/YYYY HH:mm')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 19\n          }, this), withdrawal.status === 'failed' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Failed at:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 22\n            }, this), \" \", moment(withdrawal.failed_at).format('DD/MM/YYYY HH:mm')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 19\n          }, this)]\n        }, withdrawal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this), activeTab === 'custom-offers' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: loots.map(loot => /*#__PURE__*/_jsxDEV(LootCard, {\n          loot: loot,\n          onInvest: handleInvest\n        }, loot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), activeTab === 'referrals' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: referrals.map(referral => /*#__PURE__*/_jsxDEV(ReferralCard, {\n          referral: referral\n        }, referral.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), activeTab === 'profile' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Withdrawal Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current UPI ID: \", auth.user.upi_id || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setChangeUpiId(true),\n            className: \"mt-4\",\n            children: \"Change UPI ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), changeUpiId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Change UPI ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpiIdChange,\n              className: \"grid gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                label: \"Current UPI ID Password\",\n                value: upiForm.account_password,\n                onChange: e => setUpiForm({\n                  ...upiForm,\n                  account_password: e.target.value\n                }),\n                error: upiErrors.account_password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                label: \"New UPI ID\",\n                value: upiForm.new_upi_id,\n                onChange: e => setUpiForm({\n                  ...upiForm,\n                  new_upi_id: e.target.value\n                }),\n                error: upiErrors.new_upi_id,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                loading: loading,\n                className: \"mt-4\",\n                children: \"Change UPI ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mt-6 mb-4\",\n            children: \"Withdrawal Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Withdrawal Password: \", auth.user.withdrawal_password ? 'Set' : 'Not Set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setChangeWithdrawalPassword(true),\n            className: \"mt-4\",\n            children: \"Change Withdrawal Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), changeWithdrawalPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Change Withdrawal Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleWithdrawalPasswordChange,\n              className: \"grid gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                label: \"Current Withdrawal Password\",\n                value: withdrawalForm.current_withdrawal_password,\n                onChange: e => setWithdrawalForm({\n                  ...withdrawalForm,\n                  current_withdrawal_password: e.target.value\n                }),\n                error: withdrawalErrors.current_withdrawal_password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                label: \"New Withdrawal Password\",\n                value: withdrawalForm.new_withdrawal_password,\n                onChange: e => setWithdrawalForm({\n                  ...withdrawalForm,\n                  new_withdrawal_password: e.target.value\n                }),\n                error: withdrawalErrors.new_withdrawal_password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                loading: loading,\n                className: \"mt-4\",\n                children: \"Change Withdrawal Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-12\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientDashboard, \"GY4vXDHoHYvMXzvnSE1mqrVHjHQ=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ClientDashboard;\nvar _c;\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","Navbar","LootCard","BalanceCard","ReferralCard","Input","Button","toast","ChatBox","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientDashboard","_s","navigate","auth","token","localStorage","getItem","loots","setLoots","balance","setBalance","total_earned","investments","setInvestments","referrals","setReferrals","withdrawals","setWithdrawals","showInvestModal","setShowInvestModal","showWithdrawModal","setShowWithdrawModal","selectedLoot","setSelectedLoot","investAmount","setInvestAmount","customerAmount","setCustomerAmount","earnAmount","setEarnAmount","investError","setInvestError","withdrawAmount","setWithdrawAmount","withdrawPassword","setWithdrawPassword","withdrawError","setWithdrawError","loading","setLoading","activeTab","setActiveTab","changeWithdrawalPassword","setChangeWithdrawalPassword","changeUpiId","setChangeUpiId","withdrawalForm","setWithdrawalForm","current_withdrawal_password","new_withdrawal_password","upiForm","setUpiForm","account_password","new_upi_id","withdrawalErrors","setWithdrawalErrors","upiErrors","setUpiErrors","TABS","key","label","fetchLoots","fetchBalance","fetchInvestments","fetchReferrals","fetchWithdrawals","res","fetch","headers","data","json","success","console","log","error","message","fetchLeaderboardData","fetchLeaderboardHistory","hasActiveSeason","clientEntry","topEntries","totalParticipants","season","document","getElementById","textContent","rank","name","start_date","format","end_date","bonus_amount","leaderboardTable","innerHTML","forEach","entry","index","row","createElement","className","username","appendChild","historyTable","length","status","won_bonus","rankText","earningsText","bonusText","handleInvest","loot","submitInvest","e","preventDefault","isNaN","Number","totalAmount","max_amount","loot_id","id","customer_amount","earn_amount","total_amount","requestBody","method","body","JSON","stringify","Error","err","handleWithdraw","handleWithdrawalPasswordChange","errs","Object","keys","handleUpiIdChange","updateUser","upi_id","submitWithdraw","trim","amount","withdrawal_password","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tab","onClick","totalEarned","onInvest","withdrawal","created_at","completed_at","failed_at","referral","user","variant","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/saije/Downloads/capital rise/client/src/pages/ClientDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Navbar from '../components/Navbar';\r\nimport LootCard from '../components/LootCard';\r\nimport BalanceCard from '../components/BalanceCard';\r\nimport ReferralCard from '../components/ReferralCard';\r\nimport Input from '../components/Input';\r\nimport Button from '../components/Button';\r\nimport toast from 'react-hot-toast';\r\nimport ChatBox from '../components/ChatBox';\r\nimport moment from 'moment-timezone';\r\n\r\nexport default function ClientDashboard() {\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n  const token = localStorage.getItem('token');\r\n  const [loots, setLoots] = useState([]);\r\n  const [balance, setBalance] = useState({ balance: 0, total_earned: 0 });\r\n  const [investments, setInvestments] = useState([]);\r\n  const [referrals, setReferrals] = useState([]);\r\n  const [withdrawals, setWithdrawals] = useState([]);\r\n  const [showInvestModal, setShowInvestModal] = useState(false);\r\n  const [showWithdrawModal, setShowWithdrawModal] = useState(false);\r\n  const [selectedLoot, setSelectedLoot] = useState(null);\r\n  const [investAmount, setInvestAmount] = useState('');\r\n  const [customerAmount, setCustomerAmount] = useState('');\r\n  const [earnAmount, setEarnAmount] = useState('');\r\n  const [investError, setInvestError] = useState('');\r\n  const [withdrawAmount, setWithdrawAmount] = useState('');\r\n  const [withdrawPassword, setWithdrawPassword] = useState('');\r\n  const [withdrawError, setWithdrawError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n  \r\n  // Profile state\r\n  const [changeWithdrawalPassword, setChangeWithdrawalPassword] = useState(false);\r\n  const [changeUpiId, setChangeUpiId] = useState(false);\r\n  const [withdrawalForm, setWithdrawalForm] = useState({ current_withdrawal_password: '', new_withdrawal_password: '' });\r\n  const [upiForm, setUpiForm] = useState({ account_password: '', new_upi_id: '' });\r\n  const [withdrawalErrors, setWithdrawalErrors] = useState({});\r\n  const [upiErrors, setUpiErrors] = useState({});\r\n\r\n  const TABS = [\r\n    { key: 'dashboard', label: 'Dashboard' },\r\n    { key: 'withdrawals', label: 'Withdrawal History' },\r\n    { key: 'custom-offers', label: 'Custom Offers' },\r\n    { key: 'referrals', label: 'Referral History' },\r\n    { key: 'profile', label: 'Profile' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchLoots();\r\n    fetchBalance();\r\n    fetchInvestments();\r\n    fetchReferrals();\r\n    fetchWithdrawals();\r\n  }, []);\r\n\r\n  const fetchLoots = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/loots', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      console.log('Loots fetched:', data.data);\r\n      setLoots(data.data);\r\n    } else {\r\n      console.error('Failed to fetch loots:', data.message);\r\n    }\r\n  };\r\n  const fetchBalance = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/balance', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setBalance(data.data);\r\n  };\r\n  const fetchInvestments = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/investments', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      console.log('Investments fetched:', data.data);\r\n      setInvestments(data.data);\r\n    } else {\r\n      console.error('Failed to fetch investments:', data.message);\r\n    }\r\n  };\r\n  const fetchReferrals = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/referrals', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setReferrals(data.data);\r\n  };\r\n\r\n  const fetchWithdrawals = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/withdrawals', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setWithdrawals(data.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchLoots();\r\n      fetchBalance();\r\n      fetchInvestments();\r\n      fetchReferrals();\r\n      fetchWithdrawals();\r\n      fetchLeaderboardData();\r\n      fetchLeaderboardHistory();\r\n    }\r\n  }, [token]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fetchLeaderboardData = async () => {\r\n    try {\r\n      const res = await fetch('/api/client/leaderboard/position', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n      \r\n      if (data.success && data.data.hasActiveSeason) {\r\n        const { clientEntry, topEntries, totalParticipants, season } = data.data;\r\n        \r\n        // Update current rank\r\n        document.getElementById('currentRank').textContent = clientEntry ? clientEntry.rank : '-';\r\n        \r\n        // Update season earnings\r\n        document.getElementById('seasonEarnings').textContent = clientEntry ? `₹${clientEntry.total_earned}` : '₹0.00';\r\n        \r\n        // Update total participants\r\n        document.getElementById('totalParticipants').textContent = totalParticipants;\r\n        \r\n        // Update season info\r\n        document.getElementById('seasonName').textContent = season.name;\r\n        document.getElementById('seasonDuration').textContent = `${moment(season.start_date).format('DD/MM/YYYY')} - ${moment(season.end_date).format('DD/MM/YYYY')}`;\r\n        document.getElementById('bonusAmount').textContent = `₹${season.bonus_amount}`;\r\n        \r\n        // Update leaderboard table\r\n        const leaderboardTable = document.getElementById('leaderboardTable');\r\n        leaderboardTable.innerHTML = '';\r\n        \r\n        topEntries.forEach((entry, index) => {\r\n          const row = document.createElement('tr');\r\n          row.className = 'border-t';\r\n          row.innerHTML = `\r\n            <td className=\"px-4 py-2\">${entry.rank}</td>\r\n            <td className=\"px-4 py-2\">${entry.username}</td>\r\n            <td className=\"px-4 py-2 font-medium\">₹${entry.total_earned}</td>\r\n          `;\r\n          leaderboardTable.appendChild(row);\r\n        });\r\n      } else {\r\n        // No active season\r\n        document.getElementById('currentRank').textContent = '-';\r\n        document.getElementById('seasonEarnings').textContent = '₹0.00';\r\n        document.getElementById('totalParticipants').textContent = '-';\r\n        document.getElementById('seasonName').textContent = 'No Active Season';\r\n        document.getElementById('seasonDuration').textContent = 'No season currently running';\r\n        document.getElementById('bonusAmount').textContent = '₹0';\r\n        \r\n        const leaderboardTable = document.getElementById('leaderboardTable');\r\n        leaderboardTable.innerHTML = '<tr><td colSpan=\"3\" className=\"text-center py-4 text-gray-500\">No active season</td></tr>';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching leaderboard data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchLeaderboardHistory = async () => {\r\n    try {\r\n      const res = await fetch('/api/client/leaderboard/history', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n      \r\n      if (data.success) {\r\n        const historyTable = document.getElementById('leaderboardHistoryTable');\r\n        historyTable.innerHTML = '';\r\n        \r\n        if (data.data.length === 0) {\r\n          historyTable.innerHTML = '<tr><td colSpan=\"5\" className=\"text-center py-4 text-gray-500\">No history available</td></tr>';\r\n          return;\r\n        }\r\n        \r\n        data.data.forEach((season) => {\r\n          const row = document.createElement('tr');\r\n          row.className = 'border-t';\r\n          \r\n          const status = season.won_bonus ? 'Winner' : 'Participated';\r\n          const rankText = season.rank ? `#${season.rank}` : 'N/A';\r\n          const earningsText = season.total_earned ? `₹${season.total_earned}` : '₹0';\r\n          const bonusText = season.won_bonus ? `₹${season.won_bonus}` : '-';\r\n          \r\n          row.innerHTML = `\r\n            <td className=\"px-4 py-2\">${season.name}</td>\r\n            <td className=\"px-4 py-2\">${rankText}</td>\r\n            <td className=\"px-4 py-2\">${earningsText}</td>\r\n            <td className=\"px-4 py-2\">${bonusText}</td>\r\n            <td className=\"px-4 py-2\">\r\n              <span className=\"badge ${season.won_bonus ? 'badge-success' : 'badge-secondary'}\">${status}</span>\r\n            </td>\r\n          `;\r\n          historyTable.appendChild(row);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching leaderboard history:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleInvest = loot => {\r\n    console.log('Investing in loot:', loot);\r\n    setSelectedLoot(loot);\r\n    setInvestAmount('');\r\n    setCustomerAmount('');\r\n    setEarnAmount('');\r\n    setInvestError('');\r\n    setShowInvestModal(true);\r\n  };\r\n\r\n  const submitInvest = async e => {\r\n    e.preventDefault();\r\n    setInvestError('');\r\n    \r\n    // Validation\r\n    if (!customerAmount || isNaN(customerAmount) || Number(customerAmount) <= 0) {\r\n      setInvestError('Enter a valid customer amount');\r\n      return;\r\n    }\r\n    \r\n    if (!earnAmount || isNaN(earnAmount) || Number(earnAmount) <= 0) {\r\n      setInvestError('Enter a valid earn amount');\r\n      return;\r\n    }\r\n    \r\n    const totalAmount = Number(customerAmount) + Number(earnAmount);\r\n    \r\n    if (totalAmount > selectedLoot.max_amount) {\r\n      setInvestError(`Total amount (₹${totalAmount}) cannot exceed ₹${selectedLoot.max_amount}`);\r\n      return;\r\n    }\r\n    \r\n    if (Number(earnAmount) >= Number(customerAmount)) {\r\n      setInvestError('Earn amount should be less than customer amount');\r\n      return;\r\n    }\r\n    \r\n    console.log('Submitting custom investment:', { \r\n      loot_id: selectedLoot.id, \r\n      customer_amount: customerAmount,\r\n      earn_amount: earnAmount,\r\n      total_amount: totalAmount\r\n    });\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const requestBody = { \r\n        loot_id: selectedLoot.id, \r\n        customer_amount: Number(customerAmount),\r\n        earn_amount: Number(earnAmount),\r\n        total_amount: totalAmount\r\n      };\r\n      \r\n      console.log('Sending request to /api/client/invest with body:', requestBody);\r\n      console.log('Token:', token ? 'Present' : 'Missing');\r\n      \r\n      const res = await fetch('/api/client/invest', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n      \r\n      console.log('Response status:', res.status);\r\n      console.log('Response headers:', res.headers);\r\n      \r\n      const data = await res.json();\r\n      console.log('Investment response:', data);\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Custom offer created successfully!');\r\n      setShowInvestModal(false);\r\n      fetchInvestments();\r\n      fetchBalance();\r\n    } catch (err) {\r\n      console.error('Investment error:', err);\r\n      setInvestError(err.message || 'Investment failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWithdraw = () => {\r\n    setWithdrawAmount('');\r\n    setWithdrawPassword('');\r\n    setWithdrawError('');\r\n    setShowWithdrawModal(true);\r\n  };\r\n\r\n  // Profile functions\r\n  const handleWithdrawalPasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    const errs = {};\r\n    if (!withdrawalForm.current_withdrawal_password) errs.current_withdrawal_password = 'Current password is required';\r\n    if (!withdrawalForm.new_withdrawal_password) errs.new_withdrawal_password = 'New password is required';\r\n    else if (withdrawalForm.new_withdrawal_password.length < 4) errs.new_withdrawal_password = 'New password must be at least 4 characters';\r\n    \r\n    if (Object.keys(errs).length) {\r\n      setWithdrawalErrors(errs);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/auth/change-withdrawal-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(withdrawalForm),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Withdrawal password changed successfully!');\r\n      setChangeWithdrawalPassword(false);\r\n      setWithdrawalForm({ current_withdrawal_password: '', new_withdrawal_password: '' });\r\n      setWithdrawalErrors({});\r\n    } catch (err) {\r\n      toast.error(err.message || 'Failed to change withdrawal password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpiIdChange = async (e) => {\r\n    e.preventDefault();\r\n    const errs = {};\r\n    if (!upiForm.account_password) errs.account_password = 'Account password is required';\r\n    if (!upiForm.new_upi_id) errs.new_upi_id = 'New UPI ID is required';\r\n    else if (upiForm.new_upi_id.length < 3) errs.new_upi_id = 'UPI ID must be at least 3 characters';\r\n    \r\n    if (Object.keys(errs).length) {\r\n      setUpiErrors(errs);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/auth/change-upi', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(upiForm),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('UPI ID changed successfully!');\r\n      setChangeUpiId(false);\r\n      setUpiForm({ account_password: '', new_upi_id: '' });\r\n      setUpiErrors({});\r\n      // Update user data in auth context\r\n      auth.updateUser({ upi_id: upiForm.new_upi_id });\r\n    } catch (err) {\r\n      toast.error(err.message || 'Failed to change UPI ID');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitWithdraw = async (e) => {\r\n    e.preventDefault();\r\n    setWithdrawError('');\r\n    \r\n    if (!withdrawAmount || isNaN(withdrawAmount) || Number(withdrawAmount) <= 0) {\r\n      setWithdrawError('Enter a valid amount');\r\n      return;\r\n    }\r\n    \r\n    if (Number(withdrawAmount) > balance.balance) {\r\n      setWithdrawError('Cannot withdraw more than balance');\r\n      return;\r\n    }\r\n    \r\n    if (!withdrawPassword || withdrawPassword.trim() === '') {\r\n      setWithdrawError('Withdrawal password is required');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/client/withdraw', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n          amount: withdrawAmount, \r\n          withdrawal_password: withdrawPassword.trim() \r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Withdrawal request submitted!');\r\n      setShowWithdrawModal(false);\r\n      fetchBalance();\r\n      fetchWithdrawals();\r\n    } catch (err) {\r\n      setWithdrawError(err.message || 'Withdrawal failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Navbar />\r\n      <div className=\"max-w-3xl mx-auto py-8 px-2\">\r\n        {/* Tab Navigation */}\r\n        <div className=\"flex gap-2 mb-6 border-b\">\r\n          {TABS.map(tab => (\r\n            <button\r\n              key={tab.key}\r\n              className={`px-4 py-2 font-medium border-b-2 transition-colors duration-150 ${activeTab === tab.key ? 'border-primary-600 text-primary-700' : 'border-transparent text-gray-500 hover:text-primary-600'}`}\r\n              onClick={() => setActiveTab(tab.key)}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {/* Content based on active tab */}\r\n        {activeTab === 'dashboard' && (\r\n          <>\r\n            <BalanceCard balance={balance.balance} totalEarned={balance.total_earned} />\r\n            {loots && loots.length > 0 && loots.map(loot => loot && <LootCard key={loot.id} loot={loot} onInvest={handleInvest} />)}\r\n            <ReferralCard referrals={referrals} />\r\n          </>\r\n        )}\r\n        {activeTab === 'withdrawals' && (\r\n          <div className=\"grid gap-4\">\r\n            {withdrawals.map(withdrawal => (\r\n              <div key={withdrawal.id} className=\"bg-white p-4 rounded-lg shadow-md\">\r\n                <p><strong>Amount:</strong> ₹{withdrawal.amount}</p>\r\n                <p><strong>Status:</strong> {withdrawal.status}</p>\r\n                <p><strong>Date:</strong> {moment(withdrawal.created_at).format('DD/MM/YYYY HH:mm')}</p>\r\n                {withdrawal.status === 'completed' && (\r\n                  <p><strong>Completed at:</strong> {moment(withdrawal.completed_at).format('DD/MM/YYYY HH:mm')}</p>\r\n                )}\r\n                {withdrawal.status === 'failed' && (\r\n                  <p><strong>Failed at:</strong> {moment(withdrawal.failed_at).format('DD/MM/YYYY HH:mm')}</p>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {activeTab === 'custom-offers' && (\r\n          <div className=\"grid gap-4\">\r\n            {loots.map(loot => (\r\n              <LootCard key={loot.id} loot={loot} onInvest={handleInvest} />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {activeTab === 'referrals' && (\r\n          <div className=\"grid gap-4\">\r\n            {referrals.map(referral => (\r\n              <ReferralCard key={referral.id} referral={referral} />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {activeTab === 'profile' && (\r\n          <div className=\"grid gap-4\">\r\n            <h2 className=\"text-2xl font-bold\">Profile</h2>\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <h3 className=\"text-xl font-semibold mb-4\">Withdrawal Password</h3>\r\n              <p>Current UPI ID: {auth.user.upi_id || 'N/A'}</p>\r\n              <Button variant=\"secondary\" onClick={() => setChangeUpiId(true)} className=\"mt-4\">Change UPI ID</Button>\r\n              {changeUpiId && (\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-lg font-semibold mb-2\">Change UPI ID</h4>\r\n                  <form onSubmit={handleUpiIdChange} className=\"grid gap-3\">\r\n                    <Input\r\n                      type=\"password\"\r\n                      label=\"Current UPI ID Password\"\r\n                      value={upiForm.account_password}\r\n                      onChange={(e) => setUpiForm({ ...upiForm, account_password: e.target.value })}\r\n                      error={upiErrors.account_password}\r\n                      required\r\n                    />\r\n                    <Input\r\n                      type=\"text\"\r\n                      label=\"New UPI ID\"\r\n                      value={upiForm.new_upi_id}\r\n                      onChange={(e) => setUpiForm({ ...upiForm, new_upi_id: e.target.value })}\r\n                      error={upiErrors.new_upi_id}\r\n                      required\r\n                    />\r\n                    <Button type=\"submit\" loading={loading} className=\"mt-4\">Change UPI ID</Button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n\r\n              <h3 className=\"text-xl font-semibold mt-6 mb-4\">Withdrawal Password</h3>\r\n              <p>Current Withdrawal Password: {auth.user.withdrawal_password ? 'Set' : 'Not Set'}</p>\r\n              <Button variant=\"secondary\" onClick={() => setChangeWithdrawalPassword(true)} className=\"mt-4\">Change Withdrawal Password</Button>\r\n              {changeWithdrawalPassword && (\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-lg font-semibold mb-2\">Change Withdrawal Password</h4>\r\n                  <form onSubmit={handleWithdrawalPasswordChange} className=\"grid gap-3\">\r\n                    <Input\r\n                      type=\"password\"\r\n                      label=\"Current Withdrawal Password\"\r\n                      value={withdrawalForm.current_withdrawal_password}\r\n                      onChange={(e) => setWithdrawalForm({ ...withdrawalForm, current_withdrawal_password: e.target.value })}\r\n                      error={withdrawalErrors.current_withdrawal_password}\r\n                      required\r\n                    />\r\n                    <Input\r\n                      type=\"password\"\r\n                      label=\"New Withdrawal Password\"\r\n                      value={withdrawalForm.new_withdrawal_password}\r\n                      onChange={(e) => setWithdrawalForm({ ...withdrawalForm, new_withdrawal_password: e.target.value })}\r\n                      error={withdrawalErrors.new_withdrawal_password}\r\n                      required\r\n                    />\r\n                    <Button type=\"submit\" loading={loading} className=\"mt-4\">Change Withdrawal Password</Button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* Chat with Admin */}\r\n      <div className=\"mt-12\">\r\n        <ChatBox />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}