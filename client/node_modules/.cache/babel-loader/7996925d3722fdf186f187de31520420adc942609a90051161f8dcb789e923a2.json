{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saije\\\\Downloads\\\\capital rise\\\\client\\\\src\\\\components\\\\AdminChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport Button from './Button';\nimport moment from 'moment-timezone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  autoConnect: false\n});\nexport default function AdminChatBox() {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    fetchParticipants();\n    socket.connect();\n    socket.emit('join-admin');\n    socket.on('new-message', msg => {\n      // Only add if for selected client\n      if (msg.sender_role === 'client' && msg.sender_id === (selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id) || msg.sender_role === 'admin' && msg.toUserId === (selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id)) {\n        setMessages(m => [...m, msg]);\n      }\n    });\n    return () => {\n      socket.off('new-message');\n      socket.disconnect();\n    };\n    // eslint-disable-next-line\n  }, [selectedClient]);\n  useEffect(() => {\n    if (selectedClient) fetchMessages(selectedClient.id);\n  }, [selectedClient]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const fetchParticipants = async () => {\n    const token = localStorage.getItem('token');\n    const res = await fetch('/api/chat/participants', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setParticipants(data.data);\n  };\n  const fetchMessages = async clientId => {\n    const token = localStorage.getItem('token');\n    const res = await fetch(`/api/chat/conversation/${clientId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setMessages(data.data);\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim() || !selectedClient) return;\n    const messageText = input.trim();\n    setInput('');\n\n    // Create message object for immediate display\n    const newMessage = {\n      message: messageText,\n      sender_id: 'admin',\n      sender_name: 'Admin',\n      sender_role: 'admin',\n      toUserId: selectedClient.id,\n      created_at: new Date().toISOString(),\n      formattedTime: moment().tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')\n    };\n\n    // Add message to local state immediately\n    setMessages(m => [...m, newMessage]);\n    try {\n      // Save to DB\n      const token = localStorage.getItem('token');\n      await fetch('/api/chat/messages', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageText,\n          receiver_id: selectedClient.id\n        })\n      });\n\n      // Emit for real-time\n      socket.emit('send-message', {\n        message: messageText,\n        sender_id: 'admin',\n        toUserId: selectedClient.id,\n        sender_name: 'Admin',\n        sender_role: 'admin',\n        created_at: newMessage.created_at\n      });\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      // Remove the message if it failed to send\n      setMessages(m => m.filter(msg => msg !== newMessage));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-white rounded shadow p-2 h-96 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), participants.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded cursor-pointer ${(selectedClient === null || selectedClient === void 0 ? void 0 : selectedClient.id) === p.id ? 'bg-primary-100 text-primary-900' : 'hover:bg-gray-100'}`,\n        onClick: () => setSelectedClient(p),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium\",\n          children: p.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: p.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-white rounded shadow p-2 flex flex-col h-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), selectedClient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto bg-gray-50 rounded border border-gray-200 p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [messages.map((msg, i) => {\n              const isAdminMessage = msg.sender_role === 'admin';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: isAdminMessage ? 'flex-end' : 'flex-start',\n                    marginBottom: 4\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      maxWidth: '80%',\n                      padding: '8px 12px',\n                      borderRadius: 12,\n                      background: isAdminMessage ? '#2563eb' : '#e5e7eb',\n                      color: isAdminMessage ? 'white' : 'black',\n                      wordWrap: 'break-word'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '12px',\n                        opacity: 0.8,\n                        marginBottom: 2\n                      },\n                      children: msg.sender_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: msg.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '10px',\n                        opacity: 0.7,\n                        marginTop: 4,\n                        textAlign: isAdminMessage ? 'right' : 'left'\n                      },\n                      children: msg.formattedTime || (msg.created_at ? moment(msg.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A') : '')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"flex gap-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input flex-1\",\n            placeholder: \"Type your message...\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center text-gray-400\",\n        children: \"Select a client to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminChatBox, \"Jc9tOMUYCNYzIpAxueg6slmlKpo=\");\n_c = AdminChatBox;\nvar _c;\n$RefreshReg$(_c, \"AdminChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Button","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","autoConnect","AdminChatBox","_s","participants","setParticipants","selectedClient","setSelectedClient","messages","setMessages","input","setInput","messagesEndRef","fetchParticipants","connect","emit","on","msg","sender_role","sender_id","id","toUserId","m","off","disconnect","fetchMessages","_messagesEndRef$curre","current","scrollIntoView","behavior","token","localStorage","getItem","res","fetch","headers","data","json","success","clientId","sendMessage","e","preventDefault","trim","messageText","newMessage","message","sender_name","created_at","Date","toISOString","formattedTime","tz","format","method","body","JSON","stringify","receiver_id","error","console","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","onClick","username","email","i","isAdminMessage","style","display","justifyContent","marginBottom","maxWidth","padding","borderRadius","background","color","wordWrap","fontSize","opacity","marginTop","textAlign","ref","onSubmit","placeholder","value","onChange","target","type","variant","_c","$RefreshReg$"],"sources":["C:/Users/saije/Downloads/capital rise/client/src/components/AdminChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Button from './Button';\r\nimport moment from 'moment-timezone';\r\n\r\nconst socket = io('http://localhost:5000', { autoConnect: false });\r\n\r\nexport default function AdminChatBox() {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchParticipants();\r\n    socket.connect();\r\n    socket.emit('join-admin');\r\n\r\n    socket.on('new-message', msg => {\r\n      // Only add if for selected client\r\n      if (\r\n        (msg.sender_role === 'client' && msg.sender_id === selectedClient?.id) ||\r\n        (msg.sender_role === 'admin' && msg.toUserId === selectedClient?.id)\r\n      ) {\r\n        setMessages(m => [...m, msg]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('new-message');\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClient) fetchMessages(selectedClient.id);\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const fetchParticipants = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch('/api/chat/participants', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setParticipants(data.data);\r\n  };\r\n\r\n  const fetchMessages = async clientId => {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(`/api/chat/conversation/${clientId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setMessages(data.data);\r\n  };\r\n\r\n  const sendMessage = async e => {\r\n    e.preventDefault();\r\n    if (!input.trim() || !selectedClient) return;\r\n\r\n    const messageText = input.trim();\r\n    setInput('');\r\n\r\n    // Create message object for immediate display\r\n    const newMessage = {\r\n      message: messageText,\r\n      sender_id: 'admin',\r\n      sender_name: 'Admin',\r\n      sender_role: 'admin',\r\n      toUserId: selectedClient.id,\r\n      created_at: new Date().toISOString(),\r\n      formattedTime: moment().tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A')\r\n    };\r\n\r\n    // Add message to local state immediately\r\n    setMessages(m => [...m, newMessage]);\r\n\r\n    try {\r\n      // Save to DB\r\n      const token = localStorage.getItem('token');\r\n      await fetch('/api/chat/messages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ message: messageText, receiver_id: selectedClient.id })\r\n      });\r\n\r\n      // Emit for real-time\r\n      socket.emit('send-message', {\r\n        message: messageText,\r\n        sender_id: 'admin',\r\n        toUserId: selectedClient.id,\r\n        sender_name: 'Admin',\r\n        sender_role: 'admin',\r\n        created_at: newMessage.created_at\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n      // Remove the message if it failed to send\r\n      setMessages(m => m.filter(msg => msg !== newMessage));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-4\">\r\n      <div className=\"w-64 bg-white rounded shadow p-2 h-96 overflow-y-auto\">\r\n        <h3 className=\"font-semibold mb-2\">Clients</h3>\r\n        {participants.map(p => (\r\n          <div\r\n            key={p.id}\r\n            className={`p-2 rounded cursor-pointer ${selectedClient?.id === p.id ? 'bg-primary-100 text-primary-900' : 'hover:bg-gray-100'}`}\r\n            onClick={() => setSelectedClient(p)}\r\n          >\r\n            <div className=\"font-medium\">{p.username}</div>\r\n            <div className=\"text-xs text-gray-500\">{p.email}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex-1 bg-white rounded shadow p-2 flex flex-col h-96\">\r\n        <h3 className=\"font-semibold mb-2\">Chat</h3>\r\n        {selectedClient ? (\r\n          <>\r\n            <div className=\"flex-1 overflow-y-auto bg-gray-50 rounded border border-gray-200 p-2\">\r\n              <div className=\"flex flex-col gap-2\">\r\n                {messages.map((msg, i) => {\r\n                  const isAdminMessage = msg.sender_role === 'admin';\r\n                  return (\r\n                    <div key={i} className=\"mb-2\">\r\n                      <div style={{ \r\n                        display: 'flex', \r\n                        justifyContent: isAdminMessage ? 'flex-end' : 'flex-start',\r\n                        marginBottom: 4 \r\n                      }}>\r\n                        <div style={{\r\n                          maxWidth: '80%',\r\n                          padding: '8px 12px',\r\n                          borderRadius: 12,\r\n                          background: isAdminMessage ? '#2563eb' : '#e5e7eb',\r\n                          color: isAdminMessage ? 'white' : 'black',\r\n                          wordWrap: 'break-word'\r\n                        }}>\r\n                          <div style={{ fontSize: '12px', opacity: 0.8, marginBottom: 2 }}>\r\n                            {msg.sender_name}\r\n                          </div>\r\n                          <div>{msg.message}</div>\r\n                          <div style={{ fontSize: '10px', opacity: 0.7, marginTop: 4, textAlign: isAdminMessage ? 'right' : 'left' }}>\r\n                            {msg.formattedTime || (msg.created_at ? moment(msg.created_at).tz('Asia/Kolkata').format('DD/MM/YYYY h:mm A') : '')}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            </div>\r\n            <form onSubmit={sendMessage} className=\"flex gap-2 mt-2\">\r\n              <input\r\n                className=\"input flex-1\"\r\n                placeholder=\"Type your message...\"\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n              />\r\n              <Button type=\"submit\" variant=\"primary\">Send</Button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-gray-400\">Select a client to chat</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}