{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saije\\\\Downloads\\\\capital rise\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n  updateUser: () => {},\n  loading: true\n});\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        if (data && data.data && data.data.user) {\n          setUser(data.data.user);\n        } else {\n          throw new Error('Invalid response structure');\n        }\n      }).catch(() => {\n        setUser(null);\n        setToken(null);\n        localStorage.removeItem('token');\n      }).finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const login = (token, user) => {\n    setToken(token);\n    setUser(user);\n    localStorage.setItem('token', token);\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  const updateUser = newUserData => {\n    setUser(prevUser => ({\n      ...prevUser,\n      ...newUserData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      updateUser,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nconst ChatContext = /*#__PURE__*/createContext({\n  socket: null,\n  newMessage: null,\n  notificationCount: 0,\n  clearNotifications: () => {}\n});\nexport const useChat = () => {\n  _s3();\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n_s3(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ChatProvider = ({\n  children\n}) => {\n  _s4();\n  const {\n    user\n  } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [newMessage, setNewMessage] = useState(null);\n  const [notificationCount, setNotificationCount] = useState(0);\n  useEffect(() => {\n    if (!user) {\n      if (socket) {\n        socket.disconnect();\n        setSocket(null);\n      }\n      return;\n    }\n    const s = io('http://localhost:5000', {\n      autoConnect: true\n    });\n    setSocket(s);\n    s.on('connect', () => {\n      s.emit('join-client', user.id);\n    });\n    s.on('new-message', msg => {\n      // Only notify if from admin to this client\n      if (msg.sender_role === 'admin' && msg.toUserId === user.id) {\n        setNewMessage(msg);\n        setNotificationCount(c => c + 1);\n      }\n    });\n    return () => {\n      s.off('new-message');\n      s.disconnect();\n      setSocket(null);\n    };\n  }, [user]);\n  const clearNotifications = () => {\n    setNotificationCount(0);\n    setNewMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      socket,\n      newMessage,\n      notificationCount,\n      clearNotifications\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s4(ChatProvider, \"w1OENpsUDx3yTRWxp8bNxdYa0Lk=\", false, function () {\n  return [useAuth];\n});\n_c2 = ChatProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","io","jsxDEV","_jsxDEV","AuthContext","user","token","login","logout","updateUser","loading","useAuth","_s","context","undefined","Error","AuthProvider","children","_s2","setUser","setToken","localStorage","getItem","setLoading","fetch","headers","then","res","json","data","catch","removeItem","finally","setItem","newUserData","prevUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChatContext","socket","newMessage","notificationCount","clearNotifications","useChat","_s3","ChatProvider","_s4","setSocket","setNewMessage","setNotificationCount","disconnect","s","autoConnect","on","emit","id","msg","sender_role","toUserId","c","off","_c2","$RefreshReg$"],"sources":["C:/Users/saije/Downloads/capital rise/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  updateUser: () => {},\r\n  loading: true\r\n});\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetch('/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data && data.data && data.data.user) {\r\n            setUser(data.data.user);\r\n          } else {\r\n            throw new Error('Invalid response structure');\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setUser(null);\r\n          setToken(null);\r\n          localStorage.removeItem('token');\r\n        })\r\n        .finally(() => setLoading(false));\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const login = (token, user) => {\r\n    setToken(token);\r\n    setUser(user);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const updateUser = (newUserData) => {\r\n    setUser(prevUser => ({ ...prevUser, ...newUserData }));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout, updateUser, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst ChatContext = createContext({\r\n  socket: null,\r\n  newMessage: null,\r\n  notificationCount: 0,\r\n  clearNotifications: () => {},\r\n});\r\n\r\nexport const useChat = () => {\r\n  const context = useContext(ChatContext);\r\n  if (context === undefined) {\r\n    throw new Error('useChat must be used within a ChatProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const [socket, setSocket] = useState(null);\r\n  const [newMessage, setNewMessage] = useState(null);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      if (socket) {\r\n        socket.disconnect();\r\n        setSocket(null);\r\n      }\r\n      return;\r\n    }\r\n    const s = io('http://localhost:5000', { autoConnect: true });\r\n    setSocket(s);\r\n    s.on('connect', () => {\r\n      s.emit('join-client', user.id);\r\n    });\r\n    s.on('new-message', msg => {\r\n      // Only notify if from admin to this client\r\n      if (msg.sender_role === 'admin' && msg.toUserId === user.id) {\r\n        setNewMessage(msg);\r\n        setNotificationCount(c => c + 1);\r\n      }\r\n    });\r\n    return () => {\r\n      s.off('new-message');\r\n      s.disconnect();\r\n      setSocket(null);\r\n    };\r\n  }, [user]);\r\n\r\n  const clearNotifications = () => {\r\n    setNotificationCount(0);\r\n    setNewMessage(null);\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ socket, newMessage, notificationCount, clearNotifications }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}