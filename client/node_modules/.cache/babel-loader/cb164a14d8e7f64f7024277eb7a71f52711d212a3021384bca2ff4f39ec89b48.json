{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saije\\\\Downloads\\\\capital rise\\\\client\\\\src\\\\pages\\\\ClientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport Navbar from '../components/Navbar';\nimport LootCard from '../components/LootCard';\nimport BalanceCard from '../components/BalanceCard';\nimport ReferralCard from '../components/ReferralCard';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport toast from 'react-hot-toast';\nimport ChatBox from '../components/ChatBox';\nimport moment from 'moment-timezone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClientDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const token = localStorage.getItem('token');\n  const [loots, setLoots] = useState([]);\n  const [balance, setBalance] = useState({\n    balance: 0,\n    total_earned: 0\n  });\n  const [investments, setInvestments] = useState([]);\n  const [referrals, setReferrals] = useState([]);\n  const [withdrawals, setWithdrawals] = useState([]);\n  const [showInvestModal, setShowInvestModal] = useState(false);\n  const [showWithdrawModal, setShowWithdrawModal] = useState(false);\n  const [selectedLoot, setSelectedLoot] = useState(null);\n  const [investAmount, setInvestAmount] = useState('');\n  const [customerAmount, setCustomerAmount] = useState('');\n  const [earnAmount, setEarnAmount] = useState('');\n  const [investError, setInvestError] = useState('');\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [withdrawPassword, setWithdrawPassword] = useState('');\n  const [withdrawError, setWithdrawError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  // Profile state\n  const [changeWithdrawalPassword, setChangeWithdrawalPassword] = useState(false);\n  const [changeUpiId, setChangeUpiId] = useState(false);\n  const [withdrawalForm, setWithdrawalForm] = useState({\n    current_withdrawal_password: '',\n    new_withdrawal_password: ''\n  });\n  const [upiForm, setUpiForm] = useState({\n    account_password: '',\n    new_upi_id: ''\n  });\n  const [withdrawalErrors, setWithdrawalErrors] = useState({});\n  const [upiErrors, setUpiErrors] = useState({});\n  const TABS = [{\n    key: 'dashboard',\n    label: 'Dashboard'\n  }, {\n    key: 'withdrawals',\n    label: 'Withdrawal History'\n  }, {\n    key: 'custom-offers',\n    label: 'Custom Offers'\n  }, {\n    key: 'referrals',\n    label: 'Referral History'\n  }, {\n    key: 'profile',\n    label: 'Profile'\n  }];\n  useEffect(() => {\n    fetchLoots();\n    fetchBalance();\n    fetchInvestments();\n    fetchReferrals();\n    fetchWithdrawals();\n  }, []);\n  const fetchLoots = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/loots', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) {\n      console.log('Loots fetched:', data.data);\n      setLoots(data.data);\n    } else {\n      console.error('Failed to fetch loots:', data.message);\n    }\n  };\n  const fetchBalance = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/balance', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setBalance(data.data);\n  };\n  const fetchInvestments = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/investments', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) {\n      console.log('Investments fetched:', data.data);\n      setInvestments(data.data);\n    } else {\n      console.error('Failed to fetch investments:', data.message);\n    }\n  };\n  const fetchReferrals = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/referrals', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setReferrals(data.data);\n  };\n  const fetchWithdrawals = async () => {\n    if (!token) return;\n    const res = await fetch('/api/client/withdrawals', {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    if (data.success) setWithdrawals(data.data);\n  };\n  const handleInvest = loot => {\n    console.log('Investing in loot:', loot);\n    setSelectedLoot(loot);\n    setInvestAmount('');\n    setCustomerAmount('');\n    setEarnAmount('');\n    setInvestError('');\n    setShowInvestModal(true);\n  };\n  const submitInvest = async e => {\n    e.preventDefault();\n    setInvestError('');\n\n    // Validation\n    if (!customerAmount || isNaN(customerAmount) || Number(customerAmount) <= 0) {\n      setInvestError('Enter a valid customer amount');\n      return;\n    }\n    if (!earnAmount || isNaN(earnAmount) || Number(earnAmount) <= 0) {\n      setInvestError('Enter a valid earn amount');\n      return;\n    }\n    const totalAmount = Number(customerAmount) + Number(earnAmount);\n    if (totalAmount > selectedLoot.max_amount) {\n      setInvestError(`Total amount (₹${totalAmount}) cannot exceed ₹${selectedLoot.max_amount}`);\n      return;\n    }\n    if (Number(earnAmount) >= Number(customerAmount)) {\n      setInvestError('Earn amount should be less than customer amount');\n      return;\n    }\n    console.log('Submitting custom investment:', {\n      loot_id: selectedLoot.id,\n      customer_amount: customerAmount,\n      earn_amount: earnAmount,\n      total_amount: totalAmount\n    });\n    setLoading(true);\n    try {\n      const requestBody = {\n        loot_id: selectedLoot.id,\n        customer_amount: Number(customerAmount),\n        earn_amount: Number(earnAmount),\n        total_amount: totalAmount\n      };\n      console.log('Sending request to /api/client/invest with body:', requestBody);\n      console.log('Token:', token ? 'Present' : 'Missing');\n      const res = await fetch('/api/client/invest', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log('Response status:', res.status);\n      console.log('Response headers:', res.headers);\n      const data = await res.json();\n      console.log('Investment response:', data);\n      if (!data.success) throw new Error(data.message);\n      toast.success('Custom offer created successfully!');\n      setShowInvestModal(false);\n      fetchInvestments();\n      fetchBalance();\n    } catch (err) {\n      console.error('Investment error:', err);\n      setInvestError(err.message || 'Investment failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWithdraw = () => {\n    setWithdrawAmount('');\n    setWithdrawPassword('');\n    setWithdrawError('');\n    setShowWithdrawModal(true);\n  };\n\n  // Profile functions\n  const handleWithdrawalPasswordChange = async e => {\n    e.preventDefault();\n    const errs = {};\n    if (!withdrawalForm.current_withdrawal_password) errs.current_withdrawal_password = 'Current password is required';\n    if (!withdrawalForm.new_withdrawal_password) errs.new_withdrawal_password = 'New password is required';else if (withdrawalForm.new_withdrawal_password.length < 4) errs.new_withdrawal_password = 'New password must be at least 4 characters';\n    if (Object.keys(errs).length) {\n      setWithdrawalErrors(errs);\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/change-withdrawal-password', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(withdrawalForm)\n      });\n      const data = await res.json();\n      if (!data.success) throw new Error(data.message);\n      toast.success('Withdrawal password changed successfully!');\n      setChangeWithdrawalPassword(false);\n      setWithdrawalForm({\n        current_withdrawal_password: '',\n        new_withdrawal_password: ''\n      });\n      setWithdrawalErrors({});\n    } catch (err) {\n      toast.error(err.message || 'Failed to change withdrawal password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpiIdChange = async e => {\n    e.preventDefault();\n    const errs = {};\n    if (!upiForm.account_password) errs.account_password = 'Account password is required';\n    if (!upiForm.new_upi_id) errs.new_upi_id = 'New UPI ID is required';else if (upiForm.new_upi_id.length < 3) errs.new_upi_id = 'UPI ID must be at least 3 characters';\n    if (Object.keys(errs).length) {\n      setUpiErrors(errs);\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/change-upi', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(upiForm)\n      });\n      const data = await res.json();\n      if (!data.success) throw new Error(data.message);\n      toast.success('UPI ID changed successfully!');\n      setChangeUpiId(false);\n      setUpiForm({\n        account_password: '',\n        new_upi_id: ''\n      });\n      setUpiErrors({});\n      // Update user data in auth context\n      auth.updateUser({\n        upi_id: upiForm.new_upi_id\n      });\n    } catch (err) {\n      toast.error(err.message || 'Failed to change UPI ID');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitWithdraw = async e => {\n    e.preventDefault();\n    setWithdrawError('');\n    if (!withdrawAmount || isNaN(withdrawAmount) || Number(withdrawAmount) <= 0) {\n      setWithdrawError('Enter a valid amount');\n      return;\n    }\n    if (Number(withdrawAmount) > balance.balance) {\n      setWithdrawError('Cannot withdraw more than balance');\n      return;\n    }\n    if (!withdrawPassword || withdrawPassword.trim() === '') {\n      setWithdrawError('Withdrawal password is required');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('/api/client/withdraw', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: withdrawAmount,\n          withdrawal_password: withdrawPassword.trim()\n        })\n      });\n      const data = await res.json();\n      if (!data.success) throw new Error(data.message);\n      toast.success('Withdrawal request submitted!');\n      setShowWithdrawModal(false);\n      fetchBalance();\n      fetchWithdrawals();\n    } catch (err) {\n      setWithdrawError(err.message || 'Withdrawal failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto py-8 px-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mb-6 border-b\",\n        children: TABS.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-4 py-2 font-medium border-b-2 transition-colors duration-150 ${activeTab === tab.key ? 'border-primary-600 text-primary-700' : 'border-transparent text-gray-500 hover:text-primary-600'}`,\n          onClick: () => setActiveTab(tab.key),\n          children: tab.label\n        }, tab.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BalanceCard, {\n          balance: balance.balance,\n          totalEarned: balance.total_earned,\n          onWithdraw: handleWithdraw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), loots && loots.length > 0 ? loots.map(loot => loot && loot.is_active && /*#__PURE__*/_jsxDEV(LootCard, {\n          loot: loot,\n          onInvest: handleInvest\n        }, loot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: \"No active offers available at the moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ReferralCard, {\n          referrals: referrals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === 'withdrawals' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: withdrawals.map(withdrawal => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 20\n            }, this), \" \\u20B9\", withdrawal.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 20\n            }, this), \" \", withdrawal.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 20\n            }, this), \" \", moment(withdrawal.created_at).format('DD/MM/YYYY HH:mm')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), withdrawal.status === 'completed' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Completed at:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 22\n            }, this), \" \", moment(withdrawal.completed_at).format('DD/MM/YYYY HH:mm')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 19\n          }, this), withdrawal.status === 'failed' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Failed at:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 22\n            }, this), \" \", moment(withdrawal.failed_at).format('DD/MM/YYYY HH:mm')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this)]\n        }, withdrawal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), activeTab === 'custom-offers' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: loots && loots.length > 0 ? loots.map(loot => loot && loot.is_active && /*#__PURE__*/_jsxDEV(LootCard, {\n          loot: loot,\n          onInvest: handleInvest\n        }, loot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500 py-8\",\n          children: \"No active offers available at the moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), activeTab === 'referrals' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: referrals.map(referral => /*#__PURE__*/_jsxDEV(ReferralCard, {\n          referral: referral\n        }, referral.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), activeTab === 'profile' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Withdrawal Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current UPI ID: \", auth.user.upi_id || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setChangeUpiId(true),\n            className: \"mt-4\",\n            children: \"Change UPI ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), changeUpiId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Change UPI ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpiIdChange,\n              className: \"grid gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                label: \"Current UPI ID Password\",\n                value: upiForm.account_password,\n                onChange: e => setUpiForm({\n                  ...upiForm,\n                  account_password: e.target.value\n                }),\n                error: upiErrors.account_password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                label: \"New UPI ID\",\n                value: upiForm.new_upi_id,\n                onChange: e => setUpiForm({\n                  ...upiForm,\n                  new_upi_id: e.target.value\n                }),\n                error: upiErrors.new_upi_id,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                loading: loading,\n                className: \"mt-4\",\n                children: \"Change UPI ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mt-6 mb-4\",\n            children: \"Withdrawal Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Withdrawal Password: \", auth.user.withdrawal_password ? 'Set' : 'Not Set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setChangeWithdrawalPassword(true),\n            className: \"mt-4\",\n            children: \"Change Withdrawal Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), changeWithdrawalPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold mb-2\",\n              children: \"Change Withdrawal Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleWithdrawalPasswordChange,\n              className: \"grid gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                label: \"Current Withdrawal Password\",\n                value: withdrawalForm.current_withdrawal_password,\n                onChange: e => setWithdrawalForm({\n                  ...withdrawalForm,\n                  current_withdrawal_password: e.target.value\n                }),\n                error: withdrawalErrors.current_withdrawal_password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                label: \"New Withdrawal Password\",\n                value: withdrawalForm.new_withdrawal_password,\n                onChange: e => setWithdrawalForm({\n                  ...withdrawalForm,\n                  new_withdrawal_password: e.target.value\n                }),\n                error: withdrawalErrors.new_withdrawal_password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                loading: loading,\n                className: \"mt-4\",\n                children: \"Change Withdrawal Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-12\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), showInvestModal && selectedLoot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Create Custom Offer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitInvest,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Customer Amount (\\u20B9)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: customerAmount,\n              onChange: e => setCustomerAmount(e.target.value),\n              placeholder: \"Enter customer amount\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Your Earn Amount (\\u20B9)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: earnAmount,\n              onChange: e => setEarnAmount(e.target.value),\n              placeholder: \"Enter your earn amount\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), investError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-600 text-sm\",\n            children: investError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              loading: loading,\n              className: \"flex-1\",\n              children: \"Create Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"secondary\",\n              onClick: () => setShowInvestModal(false),\n              className: \"flex-1\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this), showWithdrawModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Withdraw Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitWithdraw,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Amount (\\u20B9)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: withdrawAmount,\n              onChange: e => setWithdrawAmount(e.target.value),\n              placeholder: \"Enter amount to withdraw\",\n              max: balance.balance,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Withdrawal Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: withdrawPassword,\n              onChange: e => setWithdrawPassword(e.target.value),\n              placeholder: \"Enter withdrawal password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), withdrawError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-600 text-sm\",\n            children: withdrawError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              loading: loading,\n              className: \"flex-1\",\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"secondary\",\n              onClick: () => setShowWithdrawModal(false),\n              className: \"flex-1\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientDashboard, \"hJvMsYU8TNBseMlOQdESxNMyGpo=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ClientDashboard;\nvar _c;\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","Navbar","LootCard","BalanceCard","ReferralCard","Input","Button","toast","ChatBox","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientDashboard","_s","navigate","auth","token","localStorage","getItem","loots","setLoots","balance","setBalance","total_earned","investments","setInvestments","referrals","setReferrals","withdrawals","setWithdrawals","showInvestModal","setShowInvestModal","showWithdrawModal","setShowWithdrawModal","selectedLoot","setSelectedLoot","investAmount","setInvestAmount","customerAmount","setCustomerAmount","earnAmount","setEarnAmount","investError","setInvestError","withdrawAmount","setWithdrawAmount","withdrawPassword","setWithdrawPassword","withdrawError","setWithdrawError","loading","setLoading","activeTab","setActiveTab","changeWithdrawalPassword","setChangeWithdrawalPassword","changeUpiId","setChangeUpiId","withdrawalForm","setWithdrawalForm","current_withdrawal_password","new_withdrawal_password","upiForm","setUpiForm","account_password","new_upi_id","withdrawalErrors","setWithdrawalErrors","upiErrors","setUpiErrors","TABS","key","label","fetchLoots","fetchBalance","fetchInvestments","fetchReferrals","fetchWithdrawals","res","fetch","headers","data","json","success","console","log","error","message","handleInvest","loot","submitInvest","e","preventDefault","isNaN","Number","totalAmount","max_amount","loot_id","id","customer_amount","earn_amount","total_amount","requestBody","method","body","JSON","stringify","status","Error","err","handleWithdraw","handleWithdrawalPasswordChange","errs","length","Object","keys","handleUpiIdChange","updateUser","upi_id","submitWithdraw","trim","amount","withdrawal_password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tab","onClick","totalEarned","onWithdraw","is_active","onInvest","withdrawal","created_at","format","completed_at","failed_at","referral","user","variant","onSubmit","type","value","onChange","target","required","placeholder","max","_c","$RefreshReg$"],"sources":["C:/Users/saije/Downloads/capital rise/client/src/pages/ClientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Navbar from '../components/Navbar';\r\nimport LootCard from '../components/LootCard';\r\nimport BalanceCard from '../components/BalanceCard';\r\nimport ReferralCard from '../components/ReferralCard';\r\nimport Input from '../components/Input';\r\nimport Button from '../components/Button';\r\nimport toast from 'react-hot-toast';\r\nimport ChatBox from '../components/ChatBox';\r\nimport moment from 'moment-timezone';\r\n\r\nexport default function ClientDashboard() {\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n  const token = localStorage.getItem('token');\r\n  const [loots, setLoots] = useState([]);\r\n  const [balance, setBalance] = useState({ balance: 0, total_earned: 0 });\r\n  const [investments, setInvestments] = useState([]);\r\n  const [referrals, setReferrals] = useState([]);\r\n  const [withdrawals, setWithdrawals] = useState([]);\r\n  const [showInvestModal, setShowInvestModal] = useState(false);\r\n  const [showWithdrawModal, setShowWithdrawModal] = useState(false);\r\n  const [selectedLoot, setSelectedLoot] = useState(null);\r\n  const [investAmount, setInvestAmount] = useState('');\r\n  const [customerAmount, setCustomerAmount] = useState('');\r\n  const [earnAmount, setEarnAmount] = useState('');\r\n  const [investError, setInvestError] = useState('');\r\n  const [withdrawAmount, setWithdrawAmount] = useState('');\r\n  const [withdrawPassword, setWithdrawPassword] = useState('');\r\n  const [withdrawError, setWithdrawError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n  \r\n  // Profile state\r\n  const [changeWithdrawalPassword, setChangeWithdrawalPassword] = useState(false);\r\n  const [changeUpiId, setChangeUpiId] = useState(false);\r\n  const [withdrawalForm, setWithdrawalForm] = useState({ current_withdrawal_password: '', new_withdrawal_password: '' });\r\n  const [upiForm, setUpiForm] = useState({ account_password: '', new_upi_id: '' });\r\n  const [withdrawalErrors, setWithdrawalErrors] = useState({});\r\n  const [upiErrors, setUpiErrors] = useState({});\r\n\r\n  const TABS = [\r\n    { key: 'dashboard', label: 'Dashboard' },\r\n    { key: 'withdrawals', label: 'Withdrawal History' },\r\n    { key: 'custom-offers', label: 'Custom Offers' },\r\n    { key: 'referrals', label: 'Referral History' },\r\n    { key: 'profile', label: 'Profile' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchLoots();\r\n    fetchBalance();\r\n    fetchInvestments();\r\n    fetchReferrals();\r\n    fetchWithdrawals();\r\n  }, []);\r\n\r\n  const fetchLoots = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/loots', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      console.log('Loots fetched:', data.data);\r\n      setLoots(data.data);\r\n    } else {\r\n      console.error('Failed to fetch loots:', data.message);\r\n    }\r\n  };\r\n  const fetchBalance = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/balance', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setBalance(data.data);\r\n  };\r\n  const fetchInvestments = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/investments', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      console.log('Investments fetched:', data.data);\r\n      setInvestments(data.data);\r\n    } else {\r\n      console.error('Failed to fetch investments:', data.message);\r\n    }\r\n  };\r\n  const fetchReferrals = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/referrals', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setReferrals(data.data);\r\n  };\r\n\r\n  const fetchWithdrawals = async () => {\r\n    if (!token) return;\r\n    const res = await fetch('/api/client/withdrawals', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) setWithdrawals(data.data);\r\n  };\r\n\r\n  const handleInvest = loot => {\r\n    console.log('Investing in loot:', loot);\r\n    setSelectedLoot(loot);\r\n    setInvestAmount('');\r\n    setCustomerAmount('');\r\n    setEarnAmount('');\r\n    setInvestError('');\r\n    setShowInvestModal(true);\r\n  };\r\n\r\n  const submitInvest = async e => {\r\n    e.preventDefault();\r\n    setInvestError('');\r\n    \r\n    // Validation\r\n    if (!customerAmount || isNaN(customerAmount) || Number(customerAmount) <= 0) {\r\n      setInvestError('Enter a valid customer amount');\r\n      return;\r\n    }\r\n    \r\n    if (!earnAmount || isNaN(earnAmount) || Number(earnAmount) <= 0) {\r\n      setInvestError('Enter a valid earn amount');\r\n      return;\r\n    }\r\n    \r\n    const totalAmount = Number(customerAmount) + Number(earnAmount);\r\n    \r\n    if (totalAmount > selectedLoot.max_amount) {\r\n      setInvestError(`Total amount (₹${totalAmount}) cannot exceed ₹${selectedLoot.max_amount}`);\r\n      return;\r\n    }\r\n    \r\n    if (Number(earnAmount) >= Number(customerAmount)) {\r\n      setInvestError('Earn amount should be less than customer amount');\r\n      return;\r\n    }\r\n    \r\n    console.log('Submitting custom investment:', { \r\n      loot_id: selectedLoot.id, \r\n      customer_amount: customerAmount,\r\n      earn_amount: earnAmount,\r\n      total_amount: totalAmount\r\n    });\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const requestBody = { \r\n        loot_id: selectedLoot.id, \r\n        customer_amount: Number(customerAmount),\r\n        earn_amount: Number(earnAmount),\r\n        total_amount: totalAmount\r\n      };\r\n      \r\n      console.log('Sending request to /api/client/invest with body:', requestBody);\r\n      console.log('Token:', token ? 'Present' : 'Missing');\r\n      \r\n      const res = await fetch('/api/client/invest', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n      \r\n      console.log('Response status:', res.status);\r\n      console.log('Response headers:', res.headers);\r\n      \r\n      const data = await res.json();\r\n      console.log('Investment response:', data);\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Custom offer created successfully!');\r\n      setShowInvestModal(false);\r\n      fetchInvestments();\r\n      fetchBalance();\r\n    } catch (err) {\r\n      console.error('Investment error:', err);\r\n      setInvestError(err.message || 'Investment failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWithdraw = () => {\r\n    setWithdrawAmount('');\r\n    setWithdrawPassword('');\r\n    setWithdrawError('');\r\n    setShowWithdrawModal(true);\r\n  };\r\n\r\n  // Profile functions\r\n  const handleWithdrawalPasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    const errs = {};\r\n    if (!withdrawalForm.current_withdrawal_password) errs.current_withdrawal_password = 'Current password is required';\r\n    if (!withdrawalForm.new_withdrawal_password) errs.new_withdrawal_password = 'New password is required';\r\n    else if (withdrawalForm.new_withdrawal_password.length < 4) errs.new_withdrawal_password = 'New password must be at least 4 characters';\r\n\r\n    if (Object.keys(errs).length) {\r\n      setWithdrawalErrors(errs);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/auth/change-withdrawal-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(withdrawalForm),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Withdrawal password changed successfully!');\r\n      setChangeWithdrawalPassword(false);\r\n      setWithdrawalForm({ current_withdrawal_password: '', new_withdrawal_password: '' });\r\n      setWithdrawalErrors({});\r\n    } catch (err) {\r\n      toast.error(err.message || 'Failed to change withdrawal password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpiIdChange = async (e) => {\r\n    e.preventDefault();\r\n    const errs = {};\r\n    if (!upiForm.account_password) errs.account_password = 'Account password is required';\r\n    if (!upiForm.new_upi_id) errs.new_upi_id = 'New UPI ID is required';\r\n    else if (upiForm.new_upi_id.length < 3) errs.new_upi_id = 'UPI ID must be at least 3 characters';\r\n    \r\n    if (Object.keys(errs).length) {\r\n      setUpiErrors(errs);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/auth/change-upi', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(upiForm),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('UPI ID changed successfully!');\r\n      setChangeUpiId(false);\r\n      setUpiForm({ account_password: '', new_upi_id: '' });\r\n      setUpiErrors({});\r\n      // Update user data in auth context\r\n      auth.updateUser({ upi_id: upiForm.new_upi_id });\r\n    } catch (err) {\r\n      toast.error(err.message || 'Failed to change UPI ID');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitWithdraw = async (e) => {\r\n    e.preventDefault();\r\n    setWithdrawError('');\r\n    \r\n    if (!withdrawAmount || isNaN(withdrawAmount) || Number(withdrawAmount) <= 0) {\r\n      setWithdrawError('Enter a valid amount');\r\n      return;\r\n    }\r\n    \r\n    if (Number(withdrawAmount) > balance.balance) {\r\n      setWithdrawError('Cannot withdraw more than balance');\r\n      return;\r\n    }\r\n    \r\n    if (!withdrawPassword || withdrawPassword.trim() === '') {\r\n      setWithdrawError('Withdrawal password is required');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/client/withdraw', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n          amount: withdrawAmount, \r\n          withdrawal_password: withdrawPassword.trim() \r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) throw new Error(data.message);\r\n      toast.success('Withdrawal request submitted!');\r\n      setShowWithdrawModal(false);\r\n      fetchBalance();\r\n      fetchWithdrawals();\r\n    } catch (err) {\r\n      setWithdrawError(err.message || 'Withdrawal failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Navbar />\r\n      <div className=\"max-w-3xl mx-auto py-8 px-2\">\r\n        {/* Tab Navigation */}\r\n        <div className=\"flex gap-2 mb-6 border-b\">\r\n          {TABS.map(tab => (\r\n            <button\r\n              key={tab.key}\r\n              className={`px-4 py-2 font-medium border-b-2 transition-colors duration-150 ${activeTab === tab.key ? 'border-primary-600 text-primary-700' : 'border-transparent text-gray-500 hover:text-primary-600'}`}\r\n              onClick={() => setActiveTab(tab.key)}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {/* Content based on active tab */}\r\n        {activeTab === 'dashboard' && (\r\n          <>\r\n            <BalanceCard balance={balance.balance} totalEarned={balance.total_earned} onWithdraw={handleWithdraw} />\r\n            {loots && loots.length > 0 ? (\r\n              loots.map(loot => loot && loot.is_active && (\r\n                <LootCard key={loot.id} loot={loot} onInvest={handleInvest} />\r\n              ))\r\n            ) : (\r\n              <div className=\"text-center text-gray-500 py-8\">\r\n                No active offers available at the moment.\r\n              </div>\r\n            )}\r\n            <ReferralCard referrals={referrals} />\r\n          </>\r\n        )}\r\n        {activeTab === 'withdrawals' && (\r\n          <div className=\"grid gap-4\">\r\n            {withdrawals.map(withdrawal => (\r\n              <div key={withdrawal.id} className=\"bg-white p-4 rounded-lg shadow-md\">\r\n                <p><strong>Amount:</strong> ₹{withdrawal.amount}</p>\r\n                <p><strong>Status:</strong> {withdrawal.status}</p>\r\n                <p><strong>Date:</strong> {moment(withdrawal.created_at).format('DD/MM/YYYY HH:mm')}</p>\r\n                {withdrawal.status === 'completed' && (\r\n                  <p><strong>Completed at:</strong> {moment(withdrawal.completed_at).format('DD/MM/YYYY HH:mm')}</p>\r\n                )}\r\n                {withdrawal.status === 'failed' && (\r\n                  <p><strong>Failed at:</strong> {moment(withdrawal.failed_at).format('DD/MM/YYYY HH:mm')}</p>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {activeTab === 'custom-offers' && (\r\n          <div className=\"grid gap-4\">\r\n            {loots && loots.length > 0 ? (\r\n              loots.map(loot => loot && loot.is_active && (\r\n                <LootCard key={loot.id} loot={loot} onInvest={handleInvest} />\r\n              ))\r\n            ) : (\r\n              <div className=\"text-center text-gray-500 py-8\">\r\n                No active offers available at the moment.\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {activeTab === 'referrals' && (\r\n          <div className=\"grid gap-4\">\r\n            {referrals.map(referral => (\r\n              <ReferralCard key={referral.id} referral={referral} />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {activeTab === 'profile' && (\r\n          <div className=\"grid gap-4\">\r\n            <h2 className=\"text-2xl font-bold\">Profile</h2>\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n              <h3 className=\"text-xl font-semibold mb-4\">Withdrawal Password</h3>\r\n              <p>Current UPI ID: {auth.user.upi_id || 'N/A'}</p>\r\n              <Button variant=\"secondary\" onClick={() => setChangeUpiId(true)} className=\"mt-4\">Change UPI ID</Button>\r\n              {changeUpiId && (\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-lg font-semibold mb-2\">Change UPI ID</h4>\r\n                  <form onSubmit={handleUpiIdChange} className=\"grid gap-3\">\r\n                    <Input\r\n                      type=\"password\"\r\n                      label=\"Current UPI ID Password\"\r\n                      value={upiForm.account_password}\r\n                      onChange={(e) => setUpiForm({ ...upiForm, account_password: e.target.value })}\r\n                      error={upiErrors.account_password}\r\n                      required\r\n                    />\r\n                    <Input\r\n                      type=\"text\"\r\n                      label=\"New UPI ID\"\r\n                      value={upiForm.new_upi_id}\r\n                      onChange={(e) => setUpiForm({ ...upiForm, new_upi_id: e.target.value })}\r\n                      error={upiErrors.new_upi_id}\r\n                      required\r\n                    />\r\n                    <Button type=\"submit\" loading={loading} className=\"mt-4\">Change UPI ID</Button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n\r\n              <h3 className=\"text-xl font-semibold mt-6 mb-4\">Withdrawal Password</h3>\r\n              <p>Current Withdrawal Password: {auth.user.withdrawal_password ? 'Set' : 'Not Set'}</p>\r\n              <Button variant=\"secondary\" onClick={() => setChangeWithdrawalPassword(true)} className=\"mt-4\">Change Withdrawal Password</Button>\r\n              {changeWithdrawalPassword && (\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-lg font-semibold mb-2\">Change Withdrawal Password</h4>\r\n                  <form onSubmit={handleWithdrawalPasswordChange} className=\"grid gap-3\">\r\n                    <Input\r\n                      type=\"password\"\r\n                      label=\"Current Withdrawal Password\"\r\n                      value={withdrawalForm.current_withdrawal_password}\r\n                      onChange={(e) => setWithdrawalForm({ ...withdrawalForm, current_withdrawal_password: e.target.value })}\r\n                      error={withdrawalErrors.current_withdrawal_password}\r\n                      required\r\n                    />\r\n                    <Input\r\n                      type=\"password\"\r\n                      label=\"New Withdrawal Password\"\r\n                      value={withdrawalForm.new_withdrawal_password}\r\n                      onChange={(e) => setWithdrawalForm({ ...withdrawalForm, new_withdrawal_password: e.target.value })}\r\n                      error={withdrawalErrors.new_withdrawal_password}\r\n                      required\r\n                    />\r\n                    <Button type=\"submit\" loading={loading} className=\"mt-4\">Change Withdrawal Password</Button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* Chat with Admin */}\r\n      <div className=\"mt-12\">\r\n        <ChatBox />\r\n      </div>\r\n\r\n      {/* Investment Modal */}\r\n      {showInvestModal && selectedLoot && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Create Custom Offer</h2>\r\n            <form onSubmit={submitInvest} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer Amount (₹)</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={customerAmount}\r\n                  onChange={(e) => setCustomerAmount(e.target.value)}\r\n                  placeholder=\"Enter customer amount\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Your Earn Amount (₹)</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={earnAmount}\r\n                  onChange={(e) => setEarnAmount(e.target.value)}\r\n                  placeholder=\"Enter your earn amount\"\r\n                  required\r\n                />\r\n              </div>\r\n              {investError && (\r\n                <div className=\"text-red-600 text-sm\">{investError}</div>\r\n              )}\r\n              <div className=\"flex gap-2\">\r\n                <Button type=\"submit\" loading={loading} className=\"flex-1\">\r\n                  Create Offer\r\n                </Button>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={() => setShowInvestModal(false)} className=\"flex-1\">\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Withdrawal Modal */}\r\n      {showWithdrawModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Withdraw Funds</h2>\r\n            <form onSubmit={submitWithdraw} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amount (₹)</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={withdrawAmount}\r\n                  onChange={(e) => setWithdrawAmount(e.target.value)}\r\n                  placeholder=\"Enter amount to withdraw\"\r\n                  max={balance.balance}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Withdrawal Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={withdrawPassword}\r\n                  onChange={(e) => setWithdrawPassword(e.target.value)}\r\n                  placeholder=\"Enter withdrawal password\"\r\n                  required\r\n                />\r\n              </div>\r\n              {withdrawError && (\r\n                <div className=\"text-red-600 text-sm\">{withdrawError}</div>\r\n              )}\r\n              <div className=\"flex gap-2\">\r\n                <Button type=\"submit\" loading={loading} className=\"flex-1\">\r\n                  Withdraw\r\n                </Button>\r\n                <Button type=\"button\" variant=\"secondary\" onClick={() => setShowWithdrawModal(false)} className=\"flex-1\">\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}